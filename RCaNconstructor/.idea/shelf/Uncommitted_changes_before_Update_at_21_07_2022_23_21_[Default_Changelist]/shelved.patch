Index: src/main/java/fr/cm/canObjects/Component.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage fr.cm.canObjects;\n\nimport fr.cm.RCaNMain.Context;\nimport fr.cm.parameters.ColorsAndFormats;\nimport fr.cm.parameters.Strings;\nimport javafx.event.EventHandler;\nimport javafx.scene.Group;\nimport javafx.scene.Cursor;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.paint.Color;\nimport javafx.scene.shape.Circle;\nimport javafx.scene.text.Font;\nimport javafx.scene.text.Text;\nimport javafx.scene.text.TextAlignment;\n\n/**\n * @author christianmullon\n */\n\npublic class Component extends Group {\n    // Group : javafx class pour les objets graphiques\n    private String name;\n    private boolean inside;\n    private final int np;\n    private final double[] parameters;\n    private final Circle circle;\n    private Text text;\n    private double x,y;\n\n    Color col;\n\n    // --------------------------------------------\n    public Component() {\n        super();\n        this.name = \"\";\n        inside = true;\n        this.circle = new Circle();\n        this.text = setText();\n        np = Strings.getNumberOfParameters();\n        parameters = new double[np];\n        this.x = 0.5;\n        this.y = 0.5;\n        setPos();\n    }\n    // --------------------------------------------\n    public Component(String name, double[] param, boolean type, double x, double y) {\n        super();\n        this.setName(name);\n        this.inside = type;\n        this.circle = new Circle();\n        this.text = setText();\n        this.x = x;\n        this.y = y;\n        setPos();\n        np = Strings.getNumberOfParameters();\n        parameters = new double[np];\n        System.arraycopy(param,0,parameters,0,np);\n    }\n    // --------------------------------------------\n    public Text setText() {\n        text = new Text();\n        text.xProperty().bind(circle.centerXProperty());\n        text.yProperty().bind(circle.centerYProperty());\n        text.setText(name);\n        text.setTextAlignment(TextAlignment.CENTER);\n        text.setFont(Font.font(\"Verdana\", 20));\n        text.setFill(ColorsAndFormats.names);\n        return text;\n    }\n    // --------------------------------------------\n    boolean insideRect(double mi, double ma){\n        return(x >= mi && x <= ma && y >= mi && y <= ma);\n    }\n    // --------------------------------------------\n    void reposInsideOutside() {\n        double alpha;\n        double mi = Context.getInsideMin();\n        double ma = Context.getInsideMax();\n        boolean posInside = insideRect(mi, ma);\n        if (inside) {\n            if (posInside) {\n            } else {\n                alpha = 100000;\n                if (x >= ma) {\n                    alpha = Math.min(alpha, (x - ma) / (x - 0.5));\n                }\n                if (x <= mi) {\n                    alpha = Math.min(alpha, (x - mi) / (x - 0.5));\n                }\n                if (y >= ma) {\n                    alpha = Math.min(alpha, (y - ma) / (y - 0.5));\n                }\n                if (y <= mi) {\n                    alpha = Math.min(alpha, (y - mi) / (y - 0.5));\n                }\n                x = (x - alpha * (x - 0.5)) ;\n                y = (y - alpha * (y - 0.5));\n            }\n        } else {\n            if ( ! posInside) {\n            } else {\n                alpha = -100000;\n                if (x > 0.5) {\n                    alpha = Math.max(alpha, (x - ma) / (x - 0.5));\n                }\n                if (x < 0.5) {\n                    alpha = Math.max(alpha, (x - mi) / (x - 0.5));\n                }\n                if (y > 0.5) {\n                    alpha = Math.max(alpha, (y - ma) / (y - 0.5));\n                }\n                if (y < 0.5) {\n                    alpha = Math.max(alpha, (y - mi) / (y - 0.5));\n                }\n                x = (x - alpha * (x - 0.5)) ;\n                y = (y - alpha * (y - 0.5)) ;\n            }\n        }\n    }\n    // --------------------------------------------\n    public void setPos() {\n        reposInsideOutside();\n        circle.setCenterX(x * Context.getBackgroundWidth());\n        circle.setCenterY(y * Context.getBackgroundHeight());\n    }\n    // --------------------------------------------\n    public void setWH(double wx, double hy){\n        x = wx / Context.getBackgroundWidth();\n        y = hy / Context.getBackgroundHeight();\n        setPos();\n    }\n// --------------------------------------------\n    public void setXY(double x, double y) {\n        this.x = x;\n        this.y = y;\n        setPos();\n    }\n    // --------------------------------------------\n    public void setInside(boolean inside) {\n        this.inside = inside;\n        reposInsideOutside();\n        setCol();\n        setPos();\n    }\n    // --------------------------------------------\n    public void define(\n            EventHandler<MouseEvent> mousePressedEventHandler,\n            EventHandler<MouseEvent> mouseDraggedEventHandler,\n            EventHandler<MouseEvent> mouseDoubleClickeOnCircleEventHandler\n    ) {\n        circle.setRadius(Context.getRadiusComponent());\n        this.setCol();\n        circle.setCursor(Cursor.CROSSHAIR);\n        circle.setOnMousePressed(mousePressedEventHandler);\n        circle.setOnMouseDragged(mouseDraggedEventHandler);\n        circle.setOnMouseClicked(mouseDoubleClickeOnCircleEventHandler);\n        getChildren().add(circle);\n        getChildren().add(text);\n    }\n    // --------------------------------------------\n    public void setCol() {\n        if (inside) {\n            col = ColorsAndFormats.componentInside;\n        } else {\n            col = ColorsAndFormats.componentOutside;\n        }\n        circle.setFill(col);\n    }\n    // --------------------------------------------\n    public Circle getCircle() {\n        return (circle);\n    }\n\n    public boolean isInside() {\n        return inside;\n    }\n\n    public void setParameters(int p, String newV) {\n        try {\n            double val = Double.parseDouble(newV);\n            parameters[p] = val;\n        } catch (NumberFormatException e) {\n            parameters[p] = 0.0;\n        }\n    }\n\n    public void refill() {\n        circle.setFill(col);\n    }\n\n    public String getName() { return (name); }\n\n    public double[] getParameters() { return (parameters); }\n\n    public double getParameters(int p) { return (parameters[p]); }\n\n    public void setParameters(double[] param) { System.arraycopy(param,0,parameters,0,np); }\n\n    public void setName(String name) {\n        this.name = name.replace(\" \",\"\").replace(\"-\",\"\");\n    }\n\n    public double getX() {\n        return x;\n    }\n\n    public double getY() {\n        return y;\n    }\n    // --------------------------------------------\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/canObjects/Component.java b/src/main/java/fr/cm/canObjects/Component.java
--- a/src/main/java/fr/cm/canObjects/Component.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/canObjects/Component.java	(date 1658438487428)
@@ -214,4 +214,39 @@
     }
     // --------------------------------------------
 
+    public void addActionName(String nComp){
+        if(! name.equals(nComp)) {
+            ProjectListsManager.addAction(true,"Changing name of component: "+ name+ " -> " + nComp);
+            name = nComp;
+        }
+    }
+
+    public void addActionType(boolean nValue) {
+        if (!inside == nValue) {
+            ProjectListsManager.addAction(true, "Changing position (inside) of component " +
+                    name + " : " +
+                    inside + " -> " + nValue);
+        }
+        inside = nValue;
+    }
+
+    public void addActionParameter(int q, String nValue){
+        double nVal = -1.0;
+        try {
+            nVal = Double.parseDouble(nValue);
+            double oVal = getParameters(q);
+            String oValue = String.valueOf(oVal);
+            if(Math.abs(nVal-oVal)>0.000001){
+                setParameters(q, nValue);
+                ProjectListsManager.addAction(true,
+                        "Changing parameter "
+                        + Strings.getParametersNames()[q]
+                                + "of component: "
+                                + name + " : "
+                                + oValue + " -> " + nValue);
+            }
+        }
+        catch (NumberFormatException e) {}
+    }
+
 }
Index: src/main/java/fr/cm/RCaNMain/MainApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\npackage fr.cm.RCaNMain;\n\nimport fr.cm.GUIdialogs.*;\nimport fr.cm.canObjects.ProjectListsManager;\nimport fr.cm.parameters.ColorsAndFormats;\nimport fr.cm.rCaller.RCaNCaller;\nimport fr.cm.xmlFiles.HelpListXML;\nimport fr.cm.xmlFiles.RCommandListXML;\nimport javafx.application.Application;\n\nimport javafx.application.Platform;\nimport javafx.beans.value.ChangeListener;\nimport javafx.beans.value.ObservableValue;\nimport javafx.scene.Scene;\nimport javafx.scene.control.*;\nimport javafx.scene.layout.*;\nimport javafx.stage.Stage;\nimport javafx.stage.WindowEvent;\n\nimport java.util.Timer;\nimport java.util.TimerTask;\n\n\n/**\n * @author Christian Mullon\n *\n */\npublic class MainApplication extends Application {\n\n    public static void main(String[] args) {\n        launch(args);\n    }\n\n    public static Stage stage;\n    static BorderPane borderPaneRacine;\n    static FirstPage firstPage;\n\n    @Override\n    public void start(Stage primaryStage) {\n\n\n        RCaNCaller.initRCaller();\n\n        stage = primaryStage;\n        stage.widthProperty().addListener(changeSizelistener);\n        stage.heightProperty().addListener(changeSizelistener);\n        setOnClose();\n\n        RCommandListXML.init();\n        HelpListXML.init();\n        Context.init();\n        ProjectListsManager.init();\n        ProjectListsManager.getNetworkView().update();\n\n        borderPaneRacine = new BorderPane();\n\n        MenuBar menuBar = setMenus();\n        firstPage = new FirstPage();\n        borderPaneRacine.setCenter(firstPage);\n        borderPaneRacine.setTop(menuBar);\n\n        Scene scene = new Scene(borderPaneRacine, Context.getWindowWidth(), Context.getWindowHeight());\n        scene.getRoot().setStyle(ColorsAndFormats.font);\n\n        primaryStage.setX(0.05 * Context.getWindowWidth());\n        primaryStage.setY(0.05 * Context.getWindowHeight());\n        primaryStage.setScene(scene);\n        primaryStage.show();\n    }\n\n    public static void updateMenus() {\n        MenuFile.updateMenus();\n        MenuMeta.updateMenus();\n        MenuView.updateMenus();\n        MenuRCaN.updateMenus();\n    }\n\n    static MenuBar setMenus() {\n        new MenuRCaN(borderPaneRacine);\n        new MenuMeta(borderPaneRacine);\n        new MenuFile(borderPaneRacine);\n        new MenuHelp(borderPaneRacine);\n        new MenuView(borderPaneRacine);\n\n        MenuBar menuBar = new MenuBar();\n        Menu fileMenu = new Menu(\"File\");\n        Menu metaMenu = new Menu(\"Meta Information\");\n        Menu viewMenu = new Menu(\"View\");\n        Menu rcanMenu = new Menu(\"RCaN\");\n        Menu helpMenu = new Menu(\"Information and help\");\n\n        fileMenu.getItems().addAll(MenuFile.getMenuItems());\n        metaMenu.getItems().addAll(MenuMeta.getMenuItems());\n        viewMenu.getItems().addAll(MenuView.getMenuItems());\n        rcanMenu.getItems().addAll(MenuRCaN.getMenuItems());\n        helpMenu.getItems().addAll(MenuHelp.getMenus());\n\n        menuBar.getMenus().addAll(fileMenu, metaMenu, viewMenu, rcanMenu, helpMenu);\n        updateMenus();\n        return menuBar;\n    }\n\n    public static void close() {\n        if (Context.isChanged()) {\n            new ProjectSaveBeforeClosing();\n        }\n        Platform.exit();\n        System.exit(0);\n     }\n\n    static void setOnClose() {\n        stage.setOnCloseRequest((WindowEvent t) -> {\n            close();\n        });\n    }\n\n    // -------------------------------------------------------------------------------------\n    final ChangeListener<Number> changeSizelistener = new ChangeListener<>() {\n        // on observe si l'utilisateur est en train de changer la taille de la fenetre principale\n        final Timer timer = new Timer();\n        TimerTask task = null;\n        final long delayTime = 100;\n\n        @Override\n        public void changed(ObservableValue<? extends Number> observable, Number oldValue, final Number newValue) {\n            if (task != null) {\n                task.cancel();\n            }\n            task = new TimerTask() {\n                @Override\n                public void run() {\n                    Platform.runLater(() -> {\n                        ProjectListsManager.getNetworkView().redrawChangingSize();\n                    });\n                }\n            };\n            timer.schedule(task, delayTime);\n        }\n    };\n\n    // ------------------------------------------------------------------------\n    public static void setTitle(String fileName) {\n        stage.setTitle(\" RCaN - \" + fileName.replace(\".xlsx\", \" \"));\n    }\n\n    public static Stage getStage() {\n        return stage;\n    }\n\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/RCaNMain/MainApplication.java b/src/main/java/fr/cm/RCaNMain/MainApplication.java
--- a/src/main/java/fr/cm/RCaNMain/MainApplication.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/RCaNMain/MainApplication.java	(date 1658399370786)
@@ -101,7 +101,7 @@
         return menuBar;
     }
 
-    public static void close() {
+    public static void exit() {
         if (Context.isChanged()) {
             new ProjectSaveBeforeClosing();
         }
@@ -111,7 +111,7 @@
 
     static void setOnClose() {
         stage.setOnCloseRequest((WindowEvent t) -> {
-            close();
+            exit();
         });
     }
 
Index: src/main/java/fr/cm/RCaNMain/MenuMeta.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.RCaNMain;\n\nimport fr.cm.GUIdialogs.MetaInformationSaveDialog;\nimport fr.cm.GUItablesViews.*;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.scene.control.MenuItem;\nimport javafx.scene.layout.BorderPane;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class MenuMeta {\n\n    static final MenuItem projectPane = new MenuItem(\"Model description (pane)\");\n    static final MenuItem projectTable = new MenuItem(\"Model description (table)\");\n    static final MenuItem saveMetaTxt = new MenuItem(\"Save meta information in a text file\");\n\n    static List<MenuItem> menuItems = null;\n\n    static BorderPane borderPaneRacine;\n\n    public MenuMeta(BorderPane borderPaneRacine) {\n        this.borderPaneRacine = borderPaneRacine;\n        menuItems = Arrays.asList(projectPane, saveMetaTxt, projectTable);\n        for (MenuItem menuItem : menuItems) {\n            menuItem.setOnAction(MetaListener);\n        }\n    }\n\n    public static void updateMenus() {\n        boolean notStarted = !Context.isStarted();\n        for (MenuItem menuItem : menuItems) {\n            menuItem.setDisable(notStarted);\n        }\n    }\n\n    static void disableMetaMenus(boolean disable) {\n        for (MenuItem menuItem : menuItems) {\n            menuItem.setDisable(disable);\n        }\n    }\n\n    public static List<MenuItem> getMenuItems() {\n        return menuItems;\n    }\n\n    static final EventHandler<ActionEvent> MetaListener = e -> handle(e);\n\n    private static void handle(ActionEvent e) {\n        MenuItem menuItem = (MenuItem) e.getSource();\n        int numItem = menuItems.indexOf(menuItem);\n        switch (numItem) {\n            case 0 :\n                MetaInformationPane dialogForProject = new MetaInformationPane();\n                borderPaneRacine.setCenter(dialogForProject);\n                break;\n            case 1:\n                new MetaInformationSaveDialog();\n                break;\n            case 2:\n                MetaInformationTable metaInformationTable = new MetaInformationTable();\n                borderPaneRacine.setCenter(metaInformationTable);\n                break;\n            default:\n        }\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/RCaNMain/MenuMeta.java b/src/main/java/fr/cm/RCaNMain/MenuMeta.java
--- a/src/main/java/fr/cm/RCaNMain/MenuMeta.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/RCaNMain/MenuMeta.java	(date 1658435489522)
@@ -13,7 +13,6 @@
 public class MenuMeta {
 
     static final MenuItem projectPane = new MenuItem("Model description (pane)");
-    static final MenuItem projectTable = new MenuItem("Model description (table)");
     static final MenuItem saveMetaTxt = new MenuItem("Save meta information in a text file");
 
     static List<MenuItem> menuItems = null;
@@ -22,7 +21,7 @@
 
     public MenuMeta(BorderPane borderPaneRacine) {
         this.borderPaneRacine = borderPaneRacine;
-        menuItems = Arrays.asList(projectPane, saveMetaTxt, projectTable);
+        menuItems = Arrays.asList(projectPane, saveMetaTxt);
         for (MenuItem menuItem : menuItems) {
             menuItem.setOnAction(MetaListener);
         }
Index: src/main/java/fr/cm/RCaNMain/Context.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.RCaNMain;\n\nimport java.io.File;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\nimport fr.cm.canObjects.Action;\nimport fr.cm.canObjects.ProjectListsManager;\nimport javafx.geometry.Rectangle2D;\nimport javafx.stage.Screen;\n\n/**\n * @author christianmullon\n */\npublic class Context {\n\n    private static String fileName; // le nom du fichier projet\n    private static String dirName; // le nom du répertoire du fichier projet\n    private static File workingDirectory;\n    private static int firstYear;\n    private static int lastYear;\n\n    // etats du systeme\n    private static boolean warnings = false;\n    private static boolean changed;\n    private static boolean started;\n    private static boolean connectedR;\n    private static boolean builtR;\n    private static boolean sampledR;\n\n    static double windowWidth = 1500.0;\n    static double windowHeight = 1000.0;\n\n    static double insideMin = 0.2;\n    static double insideMax = 0.8;\n    static final double radiusComponent = 30.0f;\n    static final double radiusInternalLink = 38.0f;\n\n    // ------------------------------------------------------------------------\n\n    public static boolean isWarnings() { return warnings; }\n\n    public static boolean isChanged() { return changed; }\n\n    public static void setChanged(boolean changed, String comment) {\n        Action action = new Action(comment);\n        Context.changed = changed;\n        ProjectListsManager.addAction(action);\n    }\n\n    public static void setChanged(boolean changed) {\n        Context.changed = changed;\n    }\n\n    public static String getFileName() { return fileName; }\n\n    public static void setFileName(String fileName) { Context.fileName = fileName; }\n\n    public static String getDirName() { return dirName; }\n\n    public static void setDirName(String dirName) { Context.dirName = dirName; }\n\n    public static File getWorkingDirectory() { return workingDirectory; }\n\n    public static String getFullFileName() { return (Context.dirName + \"/\" + Context.fileName); }\n\n    public static int getFirstYear() { return firstYear; }\n\n    public static int getLastYear() { return lastYear; }\n\n    public static void setFirstYear(int firstYear) { Context.firstYear = firstYear; }\n\n    public static void setLastYear(int lastYear) { Context.lastYear = lastYear; }\n\n    public static int getNbYears() { return lastYear - firstYear + 1; }\n\n    public static boolean isConnectedR() { return connectedR; }\n\n    public static void setConnectedR(boolean connectedR) { Context.connectedR = connectedR; }\n\n    public static boolean isBuiltR() { return builtR; }\n\n    public static void setBuiltR(boolean builtR) { Context.builtR = builtR; }\n\n    public static boolean isSampledR() { return sampledR; }\n\n    public static void setSampledR(boolean sampledR) { Context.sampledR = sampledR; }\n\n    public static boolean isStarted() { return started; }\n\n    public static void setStarted(boolean started) { Context.started = started; }\n\n    public static double getWindowWidth() { return windowWidth; }\n\n    public static void setWindowWidth(double w) { windowWidth = w; }\n\n    public static double getWindowHeight() { return windowHeight; }\n\n    public static void setWindowHeight(double h) { windowHeight = h; }\n\n    public static double getInsideMin() { return insideMin; }\n\n    public static double getInsideMax() { return insideMax; }\n\n    public static double getBackgroundWidth() { return windowWidth; }\n\n    public static double getBackgroundHeight() { return (0.9 * windowHeight); }\n\n    public static double getRadiusComponent() { return radiusComponent; }\n\n    public static double getRadiusInternalLink() { return radiusInternalLink; }\n\n    public static String getDate(){\n        Date date = new Date();\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\");\n        return(formatter.format(date));\n    }\n    // ----------------------------------------------------------------------------------\n    public static List<String> getObservationsYears() {\n        List<String> liste = new ArrayList<>();\n        for (int y = getFirstYear(); y <= getLastYear(); y++) {\n            liste.add(Integer.toString(y));\n        }\n        return (liste);\n    }\n\n    public static void init() {\n        firstYear = 4000;\n        lastYear = -1000;\n        workingDirectory = new File(System.getProperty(\"user.dir\"));\n        started = false;\n        initRCaN();\n        Rectangle2D rect = Screen.getPrimary().getVisualBounds();\n        double screenWidth = rect.getWidth();\n        double screenHeight = rect.getHeight();\n        setWindowWidth(0.9 * screenWidth);\n        setWindowHeight(0.9 * screenHeight);\n        changed = false;\n    }\n\n    public static void initRCaN() {\n        connectedR = false;\n        builtR = false;\n        sampledR = false;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/RCaNMain/Context.java b/src/main/java/fr/cm/RCaNMain/Context.java
--- a/src/main/java/fr/cm/RCaNMain/Context.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/RCaNMain/Context.java	(date 1658400090160)
@@ -44,11 +44,6 @@
 
     public static boolean isChanged() { return changed; }
 
-    public static void setChanged(boolean changed, String comment) {
-        Action action = new Action(comment);
-        Context.changed = changed;
-        ProjectListsManager.addAction(action);
-    }
 
     public static void setChanged(boolean changed) {
         Context.changed = changed;
Index: src/main/java/fr/cm/canObjects/ProjectListsManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.canObjects;\n\nimport fr.cm.GUInetwork.NetworkView;\nimport fr.cm.RCaNMain.Context;\nimport fr.cm.GUIdialogs.HelpDialog;\nimport fr.cm.excel.ExcelManager;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\n\npublic class ProjectListsManager {\n\n    private static List<Component> listOfComponents;\n    private static List<Flux> listOfFluxes;\n    private static List<Constraint> listOfConstraints;\n    private static List<Observation> listOfObservations;\n    private static List<DataFile> listOfDataFiles;\n    private static List<Action> listOfActions;\n    private static MetaInformation metaInformation;\n\n    private static NetworkView networkView;\n\n    // --------------------------------------------\n\n    public static void init() {\n        networkView = new NetworkView();\n        metaInformation = new MetaInformation();\n        networkView.init();\n        listOfComponents = new ArrayList<>();\n        listOfFluxes = new ArrayList<>();\n        listOfConstraints = new ArrayList<>();\n        listOfObservations = new ArrayList<>();\n        listOfDataFiles = new ArrayList<>();\n        listOfActions = new ArrayList<>();\n    }\n\n    // ------------------------------------------------------------------------------\n    // ACTIONS\n    public static void addAction(Action action){\n        listOfActions.add(action);\n    }\n\n    public static List<Action> getListOfActions() {\n        return listOfActions;\n    }\n\n    public static void initListOfActions() {\n        listOfActions = new ArrayList<>();\n    }\n\n    public static void setListOfActions(List<Action> listOfActions) {\n        ProjectListsManager.listOfActions = listOfActions;\n    }\n\n    // ------------------------------------------------------------------------------\n    // META INFORMATION\n\n    public static MetaInformation getMetaInformation() {\n        return metaInformation;\n    }\n\n    public static void setMetaInformation(MetaInformation metaInformation) {\n        ProjectListsManager.metaInformation = metaInformation;\n    }\n\n    // ------------------------------------------------------------------------------\n    // NETWORK VIEW\n    public static NetworkView getNetworkView() {\n        networkView.update();\n        return networkView;\n    }\n    // ------------------------------------------------------------------------------\n    // COMPONENTS\n    public static void addComponent(Component component) {\n        if (containsComponent(component.getName())) {\n            HelpDialog.warning(\"This component already exists\",\"Warning\");\n        } else  if(containsObservation(component.getName())){\n            HelpDialog.warning(\"An observation with this name already exists\",\"Warning\");\n        } else{\n            component.define(\n                    networkView.getMousePressedEventHandler(),\n                    networkView.getMouseDraggedEventHandler(),\n                    networkView.getMouseDoubleClickOnCircleEventHandler());\n            listOfComponents.add(component);\n        }\n        Context.setChanged(true,\"Added component: \"+component.getName());\n    }\n    public static void removeComponent(Component component) {\n        listOfConstraints.removeIf(constraint -> constraint.involve(component));\n        Iterator<Flux> iLink = listOfFluxes.iterator();\n        while (iLink.hasNext()) {\n            Flux flux = iLink.next();\n            if (flux.hasExtremities(component)) {\n                iLink.remove();\n                listOfConstraints.removeIf(constraint -> constraint.involve(component));\n            }\n        }\n        listOfComponents.remove(component);\n        Context.setChanged(true,\"Removed component: \"+component.getName());\n    }\n    public static boolean containsComponent(String groupName) {\n        boolean contain = false;\n        for (Component component : listOfComponents){\n            if (groupName.equals(component.getName())) {\n                contain = true;\n            }\n        }\n        return contain;\n    }\n    public static Component whichComponent(String group) {\n        for (Component component : listOfComponents){\n            if (group.equals(component.getName())) {\n                return (component);\n            }\n        }\n        return (null);\n    }\n    public static List<String> getNamesOfComponents() {\n        List<String> groupNames = new ArrayList<>();\n        for (Component component : listOfComponents){\n            groupNames.add(component.getName());\n        }\n        return groupNames;\n    }\n    public static List<String> getNamesOfComponentsIn() {\n        List<String> groupNames = new ArrayList<>();\n        for (Component component : listOfComponents){\n            if(component.isInside()) {\n                groupNames.add(component.getName());\n            }\n        }\n        return groupNames;\n    }\n    public static void upComponent(Component component) {\n        int numComponent = listOfComponents.indexOf(component);\n        if (numComponent > 0) {\n            permuteListOfComponents(numComponent, numComponent - 1);\n            Context.setChanged(true);\n        }\n    }\n    public static void downComponent(Component component) {\n        int numComponent = listOfComponents.indexOf(component);\n        if (numComponent < listOfComponents.size() - 1) {\n            permuteListOfComponents(numComponent, numComponent + 1);\n            Context.setChanged(true);\n        }\n    }\n    public static void permuteListOfComponents(int rowA, int rowB) {\n        Component componentA = listOfComponents.get(rowA);\n        Component componentB = listOfComponents.get(rowB);\n        listOfComponents.set(rowA, componentB);\n        listOfComponents.set(rowB, componentA);\n    }\n    public static List<Component> getListOfComponents() {\n        return listOfComponents;\n    }\n\n    // ------------------------------------------------------------------------------\n    // LINKS\n    public static void addLink(Flux flux) {\n        if (containsLink(flux.getName())) {\n            HelpDialog.warning(\"Link already exists\",\"Warning\");\n        } else {\n            flux.define(networkView.getMouseDoubleClickOnLineEventHandler());\n            listOfFluxes.add(flux);\n            Context.setChanged(true,\"Added Flux: \"+ flux.getName());\n        }\n    }\n    public static List<String> getNamesOfLinks() {\n        List<String> linksNames = new ArrayList<>();\n        for (Flux flux : listOfFluxes){\n            linksNames.add(flux.getName());\n        }\n        return linksNames;\n    }\n    public static boolean containsLink(String linkName) {\n        boolean contain = false;\n        for (Flux flux : listOfFluxes){\n            if (linkName.equals(flux.getName())) {\n                contain = true;\n            }\n        }\n        return contain;\n    }\n    public static void removeLink(Flux flux) {\n        listOfConstraints.removeIf(constraint -> constraint.involve(flux));\n        listOfFluxes.remove(flux);\n        Context.setChanged(true,\"Removed Flux: \"+ flux.getName());\n    }\n    public static void permuteListOfLinks(int rowA, int rowB) {\n        Flux fluxA = listOfFluxes.get(rowA);\n        Flux fluxB = listOfFluxes.get(rowB);\n        listOfFluxes.set(rowA, fluxB);\n        listOfFluxes.set(rowB, fluxA);\n    }\n    public static void upLink(Flux flux) {\n        int numLink = listOfFluxes.indexOf(flux);\n        if (numLink > 0) {\n            permuteListOfLinks(numLink, numLink - 1);\n            Context.setChanged(true);\n        }\n    }\n    public static void downLink(Flux flux) {\n        int numLink = listOfFluxes.indexOf(flux);\n        if (numLink < listOfFluxes.size() - 1) {\n            permuteListOfLinks(numLink, numLink + 1);\n            Context.setChanged(true);\n        }\n    }\n    public static List<Flux> getListOfFluxes() {\n        return listOfFluxes;\n    }\n\n    // --------------------------------------------------------------------------\n    //  OBSERVATIONS\n    public static void addObservation(Observation observation) {\n        if(containsObservation(observation.getObsName())){\n            HelpDialog.warning(\"Observation already exists\",\"Warning\");\n        } else if(containsComponent(observation.getObsName())){\n            HelpDialog.warning(\"A component with same name already exists\",\"Warning\");\n        }\n            else {\n            listOfObservations.add(observation);\n             Context.setChanged(true,\"Added Observation: \"+ observation.getObsName());\n        }\n    }\n     public static void removeObservation(String observationName){\n        for (Observation observation : listOfObservations)\n            if (observationName.equals(observation.getObsName())) {\n                listOfObservations.remove(observation);\n                Context.setChanged(true,\"Removed Observation: \"+ observation.getObsName());\n                break;\n            }\n    }\n    public static void removeObservation(Observation observation){\n        listOfObservations.remove(observation);\n        Context.setChanged(true,\"Removed Observation: \"+ observation.getObsName());\n    }\n\n   public static boolean containsObservation(String observationName) {\n        boolean contain = false;\n        for (Observation observation : listOfObservations)\n            if (observationName.equals(observation.getObsName())) {\n                contain = true;\n                break;\n            }\n        return contain;\n    }\n    public static Observation getObservationByName(String observationName) {\n        Observation observationS = null;\n        for (Observation observation : listOfObservations)\n            if (observationName.equals(observation.getObsName())) {\n                observationS = observation;\n                break;\n            }\n        return observationS;\n    }\n    public static List<String> getNamesOfObservations() {\n        List<String> observationNames = new ArrayList<>();\n        for (Observation observation : listOfObservations) {\n            observationNames.add(observation.getObsName());\n        }\n        return (observationNames);\n    }\n    public static List<Observation> getListOfObservations() {\n        return listOfObservations;\n    }\n\n    public static void setListOfObservations(List<Observation> listOfObservations) {\n        ProjectListsManager.listOfObservations = listOfObservations;\n    }\n\n    // ------------------------------------------------------------------------------\n    // CONSTRAINTS\n    public static void addConstraint(Constraint constraint) {\n        listOfConstraints.add(constraint);\n        Context.setChanged(true,\"Added Constraint: \"+ constraint.getName());\n    }\n    public static void removeConstraints(Constraint constraint) {\n        listOfConstraints.remove(constraint);\n        Context.setChanged(true,\"Removed Constraint: \"+ constraint.getName());\n    }\n    public static void updateConstraint(Constraint oldC, Constraint newC) {\n        int pos = listOfConstraints.indexOf(oldC);\n        listOfConstraints.set(pos,newC);\n        Context.setChanged(true,\"Updated Constraint: \"+ oldC.getName());\n    }\n    public static void upConstraint(Constraint constraint) {\n        int numConstraint = listOfConstraints.indexOf(constraint);\n        if (numConstraint > 0) {\n            permuteListOfConstraints(numConstraint, numConstraint - 1);\n            Context.setChanged(true);\n        }\n    }\n    public static void downConstraint(Constraint constraint) {\n        int numConstraint = listOfConstraints.indexOf(constraint);\n        if (numConstraint < listOfConstraints.size() - 1) {\n            permuteListOfConstraints(numConstraint, numConstraint + 1);\n            Context.setChanged(true);\n        }\n    }\n    public static void permuteListOfConstraints(int rowA, int rowB) {\n        Constraint groupA = listOfConstraints.get(rowA);\n        Constraint groupB = listOfConstraints.get(rowB);\n        listOfConstraints.set(rowA, groupB);\n        listOfConstraints.set(rowB, groupA);\n    }\n    public static List<Constraint> getListOfConstraints() {\n        return listOfConstraints;\n    }\n\n    // ------------------------------------------------------------------------------\n    // DATA FILES\n    public static void addDataFile(DataFile newDataFile) {\n        boolean in = false;\n        for(DataFile dataFile : listOfDataFiles){\n            if (dataFile.getShortName().equals(newDataFile.getShortName())) {\n                in = true;\n                break;\n            }\n        }\n        if(! in) {\n            listOfDataFiles.add(newDataFile);\n            Context.setChanged(true,\"Added Data File: \"+ newDataFile.getShortName());\n        }\n        else {\n            HelpDialog.warning(\"File has already been introduced\",\"Warning\");\n        }\n    }\n    public static DataFile getDataFileByName(String name){\n        for(DataFile dataFile : listOfDataFiles){\n            if (dataFile.getShortName().equals(name)) {\n                return(dataFile);\n            }\n        }\n        return(null);\n    }\n    public static DataFile getFirstDataFile(){\n        if(listOfDataFiles.size()>0){\n            return(listOfDataFiles.get(0));\n        }\n        return(null);\n    }\n    public static List<DataFile> getListOfDataFiles() { return listOfDataFiles; }\n\n     // ------------------------------------------------------------------------------\n    public static void saveExcel() { ExcelManager.saveExcel(); }\n\n    public static void getExcel() { ExcelManager.getExcel(); }\n    // ------------------------------------------------------------------------------\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/canObjects/ProjectListsManager.java b/src/main/java/fr/cm/canObjects/ProjectListsManager.java
--- a/src/main/java/fr/cm/canObjects/ProjectListsManager.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/canObjects/ProjectListsManager.java	(date 1658402177807)
@@ -18,11 +18,9 @@
     private static List<DataFile> listOfDataFiles;
     private static List<Action> listOfActions;
     private static MetaInformation metaInformation;
-
     private static NetworkView networkView;
 
     // --------------------------------------------
-
     public static void init() {
         networkView = new NetworkView();
         metaInformation = new MetaInformation();
@@ -37,9 +35,15 @@
 
     // ------------------------------------------------------------------------------
     // ACTIONS
-    public static void addAction(Action action){
+
+    public static void addAction(Action action) {
         listOfActions.add(action);
     }
+    public static void addAction(boolean changed, String comment) {
+        Action action = new Action(comment);
+        if(changed) Context.setChanged(changed);
+        listOfActions.add(action);
+    }
 
     public static List<Action> getListOfActions() {
         return listOfActions;
@@ -84,7 +88,7 @@
                     networkView.getMouseDoubleClickOnCircleEventHandler());
             listOfComponents.add(component);
         }
-        Context.setChanged(true,"Added component: "+component.getName());
+        addAction(true,"Added component: "+component.getName());
     }
     public static void removeComponent(Component component) {
         listOfConstraints.removeIf(constraint -> constraint.involve(component));
@@ -97,7 +101,7 @@
             }
         }
         listOfComponents.remove(component);
-        Context.setChanged(true,"Removed component: "+component.getName());
+        addAction(true,"Removed component: "+component.getName());
     }
     public static boolean containsComponent(String groupName) {
         boolean contain = false;
@@ -164,7 +168,7 @@
         } else {
             flux.define(networkView.getMouseDoubleClickOnLineEventHandler());
             listOfFluxes.add(flux);
-            Context.setChanged(true,"Added Flux: "+ flux.getName());
+            addAction(true,"Added Flux: "+ flux.getName());
         }
     }
     public static List<String> getNamesOfLinks() {
@@ -186,7 +190,7 @@
     public static void removeLink(Flux flux) {
         listOfConstraints.removeIf(constraint -> constraint.involve(flux));
         listOfFluxes.remove(flux);
-        Context.setChanged(true,"Removed Flux: "+ flux.getName());
+        addAction(true,"Removed Flux: "+ flux.getName());
     }
     public static void permuteListOfLinks(int rowA, int rowB) {
         Flux fluxA = listOfFluxes.get(rowA);
@@ -222,20 +226,20 @@
         }
             else {
             listOfObservations.add(observation);
-             Context.setChanged(true,"Added Observation: "+ observation.getObsName());
+            addAction(true,"Added Observation: "+ observation.getObsName());
         }
     }
      public static void removeObservation(String observationName){
         for (Observation observation : listOfObservations)
             if (observationName.equals(observation.getObsName())) {
                 listOfObservations.remove(observation);
-                Context.setChanged(true,"Removed Observation: "+ observation.getObsName());
+                addAction(true,"Removed Observation: "+ observation.getObsName());
                 break;
             }
     }
     public static void removeObservation(Observation observation){
         listOfObservations.remove(observation);
-        Context.setChanged(true,"Removed Observation: "+ observation.getObsName());
+        addAction(true,"Removed Observation: "+ observation.getObsName());
     }
 
    public static boolean containsObservation(String observationName) {
@@ -275,16 +279,16 @@
     // CONSTRAINTS
     public static void addConstraint(Constraint constraint) {
         listOfConstraints.add(constraint);
-        Context.setChanged(true,"Added Constraint: "+ constraint.getName());
+        addAction(true,"Added Constraint: "+ constraint.getName());
     }
     public static void removeConstraints(Constraint constraint) {
         listOfConstraints.remove(constraint);
-        Context.setChanged(true,"Removed Constraint: "+ constraint.getName());
+        addAction(true,"Removed Constraint: "+ constraint.getName());
     }
     public static void updateConstraint(Constraint oldC, Constraint newC) {
         int pos = listOfConstraints.indexOf(oldC);
         listOfConstraints.set(pos,newC);
-        Context.setChanged(true,"Updated Constraint: "+ oldC.getName());
+        addAction(true,"Updated Constraint: "+ oldC.getName()+ "-W" + newC.getName());
     }
     public static void upConstraint(Constraint constraint) {
         int numConstraint = listOfConstraints.indexOf(constraint);
@@ -322,7 +326,7 @@
         }
         if(! in) {
             listOfDataFiles.add(newDataFile);
-            Context.setChanged(true,"Added Data File: "+ newDataFile.getShortName());
+            addAction(true,"Added Data File: "+ newDataFile.getShortName());
         }
         else {
             HelpDialog.warning("File has already been introduced","Warning");
Index: src/main/java/fr/cm/GUIdialogs/AddObservationDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.GUIdialogs;\n\nimport fr.cm.RCaNMain.Context;\nimport fr.cm.canObjects.DataFile;\nimport fr.cm.canObjects.Observation;\nimport fr.cm.canObjects.ProjectListsManager;\nimport fr.cm.parameters.ColorsAndFormats;\nimport javafx.geometry.HPos;\nimport javafx.scene.control.ButtonType;\nimport javafx.scene.control.Dialog;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TextField;\nimport javafx.scene.layout.GridPane;\nimport java.util.Optional;\n\npublic class AddObservationDialog extends Dialog<ButtonType> {\n\n    public AddObservationDialog(Observation observation, DataFile dataFile) {\n\n        GridPane grid  = new GridPane();\n\n        Label labelDataFile = new Label(\"Origin datafile\");\n        Label labelDataFileName = new Label(observation.getDataFileName());\n        GridPane.setHalignment(labelDataFile, HPos.RIGHT);\n        grid.addRow(0,labelDataFile, labelDataFileName);\n\n        Label labelDataColumn = new Label(\"Column in origin datafile\");\n        Label labelDataColumnName = new Label(observation.getOriginalColumn());\n        GridPane.setHalignment(labelDataColumn, HPos.RIGHT);\n        grid.addRow(1,labelDataColumn, labelDataColumnName);\n\n        Label labelObsName = new Label(\"Observation Name\");\n        TextField fieldObsName = new TextField();\n        fieldObsName.setText(observation.getObsName());\n        GridPane.setHalignment(labelObsName, HPos.RIGHT);\n        grid.addRow(2,labelObsName, fieldObsName);\n        \n        Label labelFirstYear = new Label(\"First year in table\");\n        TextField fieldFirstYear = new TextField();\n        fieldFirstYear.setText(Integer.toString(observation.getFirstYear()));\n        GridPane.setHalignment(labelFirstYear, HPos.RIGHT);\n        grid.addRow(3,labelFirstYear, fieldFirstYear);\n\n        Label labelFirstYearCtxt = new Label(\"First year in system\");\n        Label labelFirstYearCtxtValue = new Label(Integer.toString(Context.getFirstYear()));\n        GridPane.setHalignment(labelFirstYearCtxt, HPos.RIGHT);\n        grid.addRow(4,labelFirstYearCtxt, labelFirstYearCtxtValue);\n\n        Label labelLastYear = new Label(\"Last year in table\");\n        TextField fieldLastYear = new TextField();\n        fieldLastYear.setText(Integer.toString(observation.getLastYear()));\n        GridPane.setHalignment(labelLastYear, HPos.RIGHT);\n        grid.addRow(5,labelLastYear, fieldLastYear);\n\n        Label labelLastYearCtxt = new Label(\"Last year in system\");\n        Label labelLastYearCtxtValue = new Label(Integer.toString(Context.getLastYear()));\n        GridPane.setHalignment(labelLastYearCtxt, HPos.RIGHT);\n        grid.addRow(6,labelLastYearCtxt, labelLastYearCtxtValue);\n\n        ColorsAndFormats.setGridCharacteristics(grid);\n\n        this.setTitle(\"Observation\");\n        this.getDialogPane().setContent(grid);\n        this.getDialogPane().getButtonTypes().addAll(ButtonType.OK, ButtonType.CANCEL);\n        this.getDialogPane().setStyle(ColorsAndFormats.font);\n\n        Optional<ButtonType> result = this.showAndWait();\n        if (result.isPresent()) {\n            if (result.get() == ButtonType.OK) {\n                try{\n                    observation.setObsName(fieldObsName.getText());\n                    int fY = Integer.parseInt(fieldFirstYear.getText());\n                    int lY = Integer.parseInt(fieldLastYear.getText());\n                    observation.redimValues(fY, lY);\n                    ProjectListsManager.addObservation(observation);\n                    dataFile.addObservationFromColumn(observation);\n                }\n                catch(Exception ex){\n\n                }\n            }\n        }\n    }\n    // --------------------------------------------\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/GUIdialogs/AddObservationDialog.java b/src/main/java/fr/cm/GUIdialogs/AddObservationDialog.java
--- a/src/main/java/fr/cm/GUIdialogs/AddObservationDialog.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/GUIdialogs/AddObservationDialog.java	(date 1658435489531)
@@ -76,7 +76,6 @@
                     dataFile.addObservationFromColumn(observation);
                 }
                 catch(Exception ex){
-
                 }
             }
         }
Index: src/main/java/fr/cm/GUItablesViews/ObservationTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage fr.cm.GUItablesViews;\n\nimport fr.cm.canObjects.ProjectListsManager;\nimport fr.cm.canObjects.Observation;\nimport fr.cm.RCaNMain.Context;\nimport fr.cm.parameters.ColorsAndFormats;\nimport javafx.beans.property.SimpleStringProperty;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.scene.control.*;\nimport javafx.scene.control.cell.PropertyValueFactory;\nimport javafx.scene.layout.Pane;\nimport javafx.scene.layout.VBox;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * @author christianmullon\n */\npublic class ObservationTable extends Pane {\n\n    ObservableList<Observation> observableListOfTransposeObservations;\n    List<Observation> listOfTransposedObservations;\n    Observation selectedObservation = null;\n\n    final TableView<Observation> observationTable;\n    final VBox vbox = new VBox();\n\n    int no;\n    int ny;\n\n    double width = 0.9 * Context.getWindowWidth();\n    double height = 0.9 * Context.getWindowHeight();\n\n    public ObservationTable() {\n        observationTable = new TableView<>();\n        observationTable.setEditable(false);\n        buildTable();\n        // -----------------------------------------------------------------------------------------------\n        final Label title = new Label(\"System observations\");\n        title.setFont(ColorsAndFormats.titleFont);\n        final VBox vbox = new VBox();\n        ColorsAndFormats.setVBoxCharacteristics(vbox);\n        vbox.getChildren().addAll(title, observationTable);\n\n        this.getChildren().addAll(vbox);\n        this.setMinWidth(width);\n        this.setHeight(height);\n    }\n\n;\n\n    private void transposeListOfObservations() {\n        listOfTransposedObservations = new ArrayList<>();\n        no = ProjectListsManager.getListOfObservations().size();\n        int minYear = Context.getFirstYear();\n        ny = Context.getNbYears();\n        for (int y = 0; y < ny; y++) {\n            String name = \"\" + (minYear + y);\n            double[] values = new double[no];\n            for (int o = 0; o < no; o++) {\n                values[o] = ProjectListsManager.getListOfObservations().get(o).getValues(y);\n            }\n            Observation transposedObservation = new Observation(name, values);\n            listOfTransposedObservations.add(transposedObservation);\n        }\n    }\n\n    private void makeTable() {\n        // Premiere colonne avec les annees\n        TableColumn<Observation, String> name = new TableColumn<>(\"Name\");\n        name.setCellValueFactory(new PropertyValueFactory<>(\"obsName\"));\n        name.setSortable(false);\n        observationTable.getColumns().add(name);\n        // Autres colones avec les observations\n        for (int o = 0; o < no; o++) {\n            String obs = ProjectListsManager.getListOfObservations().get(o).getObsName();\n            final int oo = o;\n            TableColumn<Observation, String> col = new TableColumn<>();\n            Label colHeader = new Label(obs);\n            colHeader.setOnMouseClicked(event -> {\n                Label labs = (Label) event.getSource();\n                String obsS = labs.getText();\n                selectedObservation = ProjectListsManager.getObservationByName(obsS);\n            });\n            col.setGraphic(colHeader);\n            col.setSortable(false);\n            col.setMinWidth(100.0);\n            col.setCellValueFactory(\n                    param -> {\n                        SimpleStringProperty sval = new SimpleStringProperty();\n                        Observation observation = param.getValue();\n                        double val = observation.getValues()[oo];\n                        sval.set(String.format(\"%.2f\", val));\n                        return sval;\n                    }\n            );\n            observationTable.getColumns().add(col);\n        }\n      }\n\n\n    //\n    public void buildTable() {\n        observationTable.setPrefWidth(0.9 * width);\n        observationTable.setPrefHeight(0.8 * height);\n        observationTable.getColumns().removeAll(observationTable.getColumns());\n        transposeListOfObservations();\n        makeTable();\n        observableListOfTransposeObservations = FXCollections.observableArrayList(listOfTransposedObservations);\n        observationTable.setItems(observableListOfTransposeObservations);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/GUItablesViews/ObservationTable.java b/src/main/java/fr/cm/GUItablesViews/ObservationTable.java
--- a/src/main/java/fr/cm/GUItablesViews/ObservationTable.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/GUItablesViews/ObservationTable.java	(date 1658435489515)
@@ -53,9 +53,7 @@
         this.setMinWidth(width);
         this.setHeight(height);
     }
-
-;
-
+    ;
     private void transposeListOfObservations() {
         listOfTransposedObservations = new ArrayList<>();
         no = ProjectListsManager.getListOfObservations().size();
@@ -105,7 +103,6 @@
         }
       }
 
-
     //
     public void buildTable() {
         observationTable.setPrefWidth(0.9 * width);
Index: src/main/java/fr/cm/GUItablesViews/ComponentTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage fr.cm.GUItablesViews;\n\nimport fr.cm.canObjects.Component;\nimport fr.cm.canObjects.ProjectListsManager;\nimport fr.cm.RCaNMain.Context;\nimport fr.cm.parameters.ColorsAndFormats;\nimport fr.cm.parameters.Strings;\nimport javafx.beans.property.SimpleDoubleProperty;\nimport javafx.beans.property.SimpleBooleanProperty;\n\nimport javafx.beans.value.ChangeListener;\nimport javafx.beans.value.ObservableValue;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.event.ActionEvent;\nimport javafx.scene.control.*;\nimport javafx.scene.control.TableColumn.*;\nimport javafx.scene.control.cell.PropertyValueFactory;\nimport javafx.scene.control.cell.TextFieldTableCell;\nimport javafx.scene.control.cell.CheckBoxTableCell;\nimport javafx.scene.layout.HBox;\nimport javafx.scene.layout.VBox;\nimport javafx.scene.layout.Pane;\n\nimport javafx.util.Callback;\n\n/**\n * @author christianmullon\n */\npublic class ComponentTable extends Pane {\n\n    double width = 0.9 * Context.getWindowWidth();\n    double height =  0.9 * Context.getWindowHeight();\n\n    final TableView<Component> table;\n    ObservableList<Component> list;\n\n    public ComponentTable() {\n        super();\n        int nbParameters = Strings.getNumberOfParameters();\n\n        table = new TableView<>();\n        table.setPrefWidth(0.9*Context.getWindowWidth());\n        table.setEditable(true);\n\n        TableColumn<Component, String> name = new TableColumn<>(\"Name\");\n        name.setCellValueFactory(new PropertyValueFactory<>(\"name\"));\n        name.setCellFactory(TextFieldTableCell.forTableColumn());\n        name.setEditable(true);\n        name.setMinWidth(130.0);\n        name.setSortable(true);\n        name.setOnEditCommit(\n                event -> {\n                    Component component = event.getTableView().getItems().get(event.getTablePosition().getRow());\n                    component.setName(event.getNewValue());\n                }\n        );\n        table.getColumns().add(name);\n\n        TableColumn<Component, Boolean> insideCol = new TableColumn<>(\"Inside system\");\n        insideCol.setCellValueFactory(new Callback<CellDataFeatures<Component, Boolean>, ObservableValue<Boolean>>() {\n            @Override\n            public ObservableValue<Boolean> call(CellDataFeatures<Component, Boolean> param) {\n                Component component = param.getValue();\n                SimpleBooleanProperty booleanProp = new SimpleBooleanProperty(component.isInside());\n                booleanProp.addListener(new ChangeListener<Boolean>() {\n                    @Override\n                    public void changed(ObservableValue<? extends Boolean> observable, Boolean oldValue,\n                                        Boolean newValue) {\n                        component.setInside(newValue);\n                    }\n                });\n                return booleanProp;\n            }\n        });\n\n        insideCol.setCellFactory(new Callback<TableColumn<Component, Boolean>, TableCell<Component, Boolean>>() {\n            @Override\n            public TableCell<Component, Boolean> call(TableColumn<Component, Boolean> p) {\n                CheckBoxTableCell<Component, Boolean> cell = new CheckBoxTableCell<Component, Boolean>();\n                return cell;\n            }\n        });\n        table.getColumns().add(insideCol);\n\n        for (int p = 0; p < nbParameters; p++) {\n            final int q = p;\n            TableColumn<Component, String> col = new TableColumn<>(Strings.getParametersNames()[p]);\n            col.setMinWidth(130.0);\n            col.setCellValueFactory(\n                    param -> {\n                        SimpleDoubleProperty sval = new SimpleDoubleProperty();\n                        Component component = param.getValue();\n                        sval.setValue(component.getParameters(q));\n                        return sval.asString();\n                    }\n            );\n            col.setCellFactory(TextFieldTableCell.forTableColumn());\n            col.setOnEditCommit(\n                    event -> {\n                        Component component = event.getTableView().getItems().get(event.getTablePosition().getRow());\n                        component.setParameters(q, event.getNewValue());\n                    }\n            );\n\n            table.getColumns().add(col);\n        }\n\n        list = FXCollections.observableArrayList(ProjectListsManager.getListOfComponents());\n        table.setItems(list);\n        table.getSelectionModel().selectFirst();\n\n        final Button deleteG = new Button(\"Delete\");\n        deleteG.setOnAction((ActionEvent e) -> {\n            if (table.getSelectionModel().getSelectedItem() != null) {\n                Component component = table.getSelectionModel().getSelectedItem();\n                ProjectListsManager.removeComponent(component);\n                list.removeAll(component);\n                updateTable();\n            }\n        });\n\n        final Button buttonUp = new Button(\"Up\");\n        buttonUp.setOnAction((ActionEvent e) -> {\n            Component component = table.getSelectionModel().getSelectedItem();\n            ProjectListsManager.upComponent(component);\n            updateTable();\n        });\n\n        final Button buttonDown = new Button(\"Down\");\n        buttonDown.setOnAction((ActionEvent e) -> {\n            Component component = table.getSelectionModel().getSelectedItem();\n            ProjectListsManager.downComponent(component);\n            updateTable();\n        });\n\n        final HBox hboxButtons = new HBox();\n        hboxButtons.getChildren().addAll(buttonUp, buttonDown, deleteG);\n        hboxButtons.setSpacing(50);\n        // hboxButtons.setMinSize(800.0, 120.0);\n\n        final Label title = new Label(\"System components\");\n        title.setFont(ColorsAndFormats.titleFont);\n        final VBox vbox = new VBox();\n        ColorsAndFormats.setVBoxCharacteristics(vbox);\n        vbox.getChildren().addAll(title, table, hboxButtons);\n        // vbox.setMinSize(1000.0, 750.0);\n\n        this.getChildren().addAll(vbox);\n    }\n\n    public void updateTable() {\n        Component component = table.getSelectionModel().getSelectedItem();\n        table.getItems().removeAll(list);\n        list = FXCollections.observableArrayList(ProjectListsManager.getListOfComponents());\n        table.setItems(list);\n        table.getSelectionModel().select(component);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/GUItablesViews/ComponentTable.java b/src/main/java/fr/cm/GUItablesViews/ComponentTable.java
--- a/src/main/java/fr/cm/GUItablesViews/ComponentTable.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/GUItablesViews/ComponentTable.java	(date 1658438171033)
@@ -57,7 +57,8 @@
         name.setOnEditCommit(
                 event -> {
                     Component component = event.getTableView().getItems().get(event.getTablePosition().getRow());
-                    component.setName(event.getNewValue());
+                    String nComp = event.getNewValue();
+                    component.addActionName(nComp);
                 }
         );
         table.getColumns().add(name);
@@ -70,15 +71,13 @@
                 SimpleBooleanProperty booleanProp = new SimpleBooleanProperty(component.isInside());
                 booleanProp.addListener(new ChangeListener<Boolean>() {
                     @Override
-                    public void changed(ObservableValue<? extends Boolean> observable, Boolean oldValue,
-                                        Boolean newValue) {
-                        component.setInside(newValue);
+                    public void changed(ObservableValue<? extends Boolean> observable, Boolean oldValue, Boolean newValue) {
+                        component.addActionType(newValue);
                     }
                 });
                 return booleanProp;
             }
         });
-
         insideCol.setCellFactory(new Callback<TableColumn<Component, Boolean>, TableCell<Component, Boolean>>() {
             @Override
             public TableCell<Component, Boolean> call(TableColumn<Component, Boolean> p) {
@@ -104,10 +103,9 @@
             col.setOnEditCommit(
                     event -> {
                         Component component = event.getTableView().getItems().get(event.getTablePosition().getRow());
-                        component.setParameters(q, event.getNewValue());
+                        String nValue = event.getNewValue();
                     }
             );
-
             table.getColumns().add(col);
         }
 
Index: src/main/java/fr/cm/RCaNMain/MenuView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.RCaNMain;\n\nimport fr.cm.GUItablesViews.*;\nimport fr.cm.canObjects.ProjectListsManager;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.scene.control.MenuItem;\nimport javafx.scene.layout.BorderPane;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class MenuView {\n\n    static final MenuItem networkItem = new MenuItem(\"Network\");\n    static final MenuItem actionsItem = new MenuItem(\"Actions\");\n    static final MenuItem groupsItem = new MenuItem(\"Components\");\n    static final MenuItem linksItem = new MenuItem(\"Fluxes\");\n    static final MenuItem constraintsItem = new MenuItem(\"Constraints\");\n    static final MenuItem observationsItem = new MenuItem(\"Observations\");\n    static final MenuItem dataFileItem = new MenuItem(\"Data Files\");\n\n    static List<MenuItem> menuItems = null;\n\n    static BorderPane borderPaneRacine;\n\n    public MenuView(BorderPane borderPaneRacine) {\n        this.borderPaneRacine = borderPaneRacine;\n        menuItems = Arrays.asList(networkItem, groupsItem, linksItem, observationsItem, constraintsItem, dataFileItem, actionsItem\n        );\n        for (MenuItem menuItem : menuItems) {\n            menuItem.setOnAction(ViewListener);\n        }\n    }\n\n    static void updateMenus() {\n        boolean notStarted = !Context.isStarted();\n        for (MenuItem menuItem : menuItems) {\n            menuItem.setDisable(notStarted);\n        }\n     }\n\n    public static List<MenuItem> getMenuItems() {\n        return menuItems;\n    }\n\n    static final EventHandler<ActionEvent> ViewListener = e -> handle(e);\n\n    private static void handle(ActionEvent e) {\n        MenuItem menuItem = (MenuItem) e.getSource();\n        int numItem = menuItems.indexOf(menuItem);\n        switch (numItem) {\n            case 0 :\n                ProjectListsManager.getNetworkView().update();\n                borderPaneRacine.setCenter(ProjectListsManager.getNetworkView());\n                break;\n            case 1:\n                ComponentTable componentTable = new ComponentTable();\n                borderPaneRacine.setCenter(componentTable);\n                break;\n            case 2 :\n                FluxTable fluxTable = new FluxTable();\n                borderPaneRacine.setCenter(fluxTable);\n                break;\n            case 3:\n                ObservationTable observationTable = new ObservationTable();\n                borderPaneRacine.setCenter(observationTable);\n                break;\n            case 4 :\n                ConstraintTable constraintTable = new ConstraintTable();\n                borderPaneRacine.setCenter(constraintTable);\n                break;\n            case 5 :\n                DataFileTable dataFileTable = new DataFileTable();\n                borderPaneRacine.setCenter(dataFileTable);\n                break;\n            case 6 :\n                ActionTable actionTable = new ActionTable();\n                borderPaneRacine.setCenter(actionTable);\n                break;\n            default:\n        }\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/RCaNMain/MenuView.java b/src/main/java/fr/cm/RCaNMain/MenuView.java
--- a/src/main/java/fr/cm/RCaNMain/MenuView.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/RCaNMain/MenuView.java	(date 1658435489502)
@@ -19,6 +19,7 @@
     static final MenuItem constraintsItem = new MenuItem("Constraints");
     static final MenuItem observationsItem = new MenuItem("Observations");
     static final MenuItem dataFileItem = new MenuItem("Data Files");
+    static final MenuItem projectMetaItem = new MenuItem("Meta information");
 
     static List<MenuItem> menuItems = null;
 
@@ -26,8 +27,7 @@
 
     public MenuView(BorderPane borderPaneRacine) {
         this.borderPaneRacine = borderPaneRacine;
-        menuItems = Arrays.asList(networkItem, groupsItem, linksItem, observationsItem, constraintsItem, dataFileItem, actionsItem
-        );
+        menuItems = Arrays.asList(networkItem, groupsItem, linksItem, observationsItem, constraintsItem, dataFileItem, actionsItem, projectMetaItem);
         for (MenuItem menuItem : menuItems) {
             menuItem.setOnAction(ViewListener);
         }
@@ -77,6 +77,10 @@
             case 6 :
                 ActionTable actionTable = new ActionTable();
                 borderPaneRacine.setCenter(actionTable);
+                break;
+            case 7 :
+                MetaInformationTable metaInformationTable = new MetaInformationTable();
+                borderPaneRacine.setCenter(metaInformationTable);
                 break;
             default:
         }
Index: .idea/libraries/Maven__org_openjfx_javafx_controls_mac_16.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_controls_mac_16.xml b/.idea/libraries/Maven__org_openjfx_javafx_controls_mac_18.xml
rename from .idea/libraries/Maven__org_openjfx_javafx_controls_mac_16.xml
rename to .idea/libraries/Maven__org_openjfx_javafx_controls_mac_18.xml
--- a/.idea/libraries/Maven__org_openjfx_javafx_controls_mac_16.xml	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/.idea/libraries/Maven__org_openjfx_javafx_controls_mac_18.xml	(date 1658399370504)
@@ -1,13 +1,13 @@
 <component name="libraryTable">
-  <library name="Maven: org.openjfx:javafx-controls:mac:16">
+  <library name="Maven: org.openjfx:javafx-controls:mac:18">
     <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/16/javafx-controls-16-mac.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/18/javafx-controls-18-mac.jar!/" />
     </CLASSES>
     <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/16/javafx-controls-16-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/18/javafx-controls-18-javadoc.jar!/" />
     </JAVADOC>
     <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/16/javafx-controls-16-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/18/javafx-controls-18-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_fxml_mac_16.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_fxml_mac_16.xml b/.idea/libraries/Maven__org_openjfx_javafx_fxml_mac_18.xml
rename from .idea/libraries/Maven__org_openjfx_javafx_fxml_mac_16.xml
rename to .idea/libraries/Maven__org_openjfx_javafx_fxml_mac_18.xml
--- a/.idea/libraries/Maven__org_openjfx_javafx_fxml_mac_16.xml	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/.idea/libraries/Maven__org_openjfx_javafx_fxml_mac_18.xml	(date 1658399370511)
@@ -1,13 +1,13 @@
 <component name="libraryTable">
-  <library name="Maven: org.openjfx:javafx-fxml:mac:16">
+  <library name="Maven: org.openjfx:javafx-fxml:mac:18">
     <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/16/javafx-fxml-16-mac.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/18/javafx-fxml-18-mac.jar!/" />
     </CLASSES>
     <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/16/javafx-fxml-16-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/18/javafx-fxml-18-javadoc.jar!/" />
     </JAVADOC>
     <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/16/javafx-fxml-16-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/18/javafx-fxml-18-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_base_mac_16.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_base_mac_16.xml b/.idea/libraries/Maven__org_openjfx_javafx_base_mac_18.xml
rename from .idea/libraries/Maven__org_openjfx_javafx_base_mac_16.xml
rename to .idea/libraries/Maven__org_openjfx_javafx_base_mac_18.xml
--- a/.idea/libraries/Maven__org_openjfx_javafx_base_mac_16.xml	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/.idea/libraries/Maven__org_openjfx_javafx_base_mac_18.xml	(date 1658399370488)
@@ -1,13 +1,13 @@
 <component name="libraryTable">
-  <library name="Maven: org.openjfx:javafx-base:mac:16">
+  <library name="Maven: org.openjfx:javafx-base:mac:18">
     <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/16/javafx-base-16-mac.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/18/javafx-base-18-mac.jar!/" />
     </CLASSES>
     <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/16/javafx-base-16-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/18/javafx-base-18-javadoc.jar!/" />
     </JAVADOC>
     <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/16/javafx-base-16-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/18/javafx-base-18-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_controls_16.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_controls_16.xml b/.idea/libraries/Maven__org_openjfx_javafx_controls_18.xml
rename from .idea/libraries/Maven__org_openjfx_javafx_controls_16.xml
rename to .idea/libraries/Maven__org_openjfx_javafx_controls_18.xml
--- a/.idea/libraries/Maven__org_openjfx_javafx_controls_16.xml	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/.idea/libraries/Maven__org_openjfx_javafx_controls_18.xml	(date 1658399370495)
@@ -1,13 +1,13 @@
 <component name="libraryTable">
-  <library name="Maven: org.openjfx:javafx-controls:16">
+  <library name="Maven: org.openjfx:javafx-controls:18">
     <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/16/javafx-controls-16.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/18/javafx-controls-18.jar!/" />
     </CLASSES>
     <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/16/javafx-controls-16-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/18/javafx-controls-18-javadoc.jar!/" />
     </JAVADOC>
     <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/16/javafx-controls-16-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/18/javafx-controls-18-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_graphics_16.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_graphics_16.xml b/.idea/libraries/Maven__org_openjfx_javafx_graphics_18.xml
rename from .idea/libraries/Maven__org_openjfx_javafx_graphics_16.xml
rename to .idea/libraries/Maven__org_openjfx_javafx_graphics_18.xml
--- a/.idea/libraries/Maven__org_openjfx_javafx_graphics_16.xml	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/.idea/libraries/Maven__org_openjfx_javafx_graphics_18.xml	(date 1658399370519)
@@ -1,13 +1,13 @@
 <component name="libraryTable">
-  <library name="Maven: org.openjfx:javafx-graphics:16">
+  <library name="Maven: org.openjfx:javafx-graphics:18">
     <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/16/javafx-graphics-16.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/18/javafx-graphics-18.jar!/" />
     </CLASSES>
     <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/16/javafx-graphics-16-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/18/javafx-graphics-18-javadoc.jar!/" />
     </JAVADOC>
     <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/16/javafx-graphics-16-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/18/javafx-graphics-18-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_graphics_mac_16.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_graphics_mac_16.xml b/.idea/libraries/Maven__org_openjfx_javafx_graphics_mac_18.xml
rename from .idea/libraries/Maven__org_openjfx_javafx_graphics_mac_16.xml
rename to .idea/libraries/Maven__org_openjfx_javafx_graphics_mac_18.xml
--- a/.idea/libraries/Maven__org_openjfx_javafx_graphics_mac_16.xml	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/.idea/libraries/Maven__org_openjfx_javafx_graphics_mac_18.xml	(date 1658399370530)
@@ -1,13 +1,13 @@
 <component name="libraryTable">
-  <library name="Maven: org.openjfx:javafx-graphics:mac:16">
+  <library name="Maven: org.openjfx:javafx-graphics:mac:18">
     <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/16/javafx-graphics-16-mac.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/18/javafx-graphics-18-mac.jar!/" />
     </CLASSES>
     <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/16/javafx-graphics-16-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/18/javafx-graphics-18-javadoc.jar!/" />
     </JAVADOC>
     <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/16/javafx-graphics-16-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/18/javafx-graphics-18-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: src/main/java/fr/cm/rCaller/RCaNCaller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.rCaller;\n\nimport com.github.rcaller.graphics.SkyTheme;\nimport com.github.rcaller.rstuff.*;\nimport fr.cm.GUIdialogs.HelpDialog;\nimport fr.cm.RCaNMain.Context;\nimport fr.cm.RCaNMain.MainApplication;\nimport fr.cm.xmlFiles.RCommandXML;\nimport javafx.application.Platform;\nimport javafx.scene.image.Image;\nimport javafx.scene.layout.HBox;\n\nimport java.io.*;\nimport java.util.List;\n\npublic class RCaNCaller {\n    static RCaller caller;\n    static RCode code;\n    static File filePlot;\n    static boolean plot = false,  initialized = false,  runOk = false;\n    static String resultString = \"\";\n    static RCommandXML rCommandXML = null;\n\n    // ------------------------------------------------------------------------\n    public static void initRCaller() {\n        if( ! initialized) {\n            Context.initRCaN();\n            caller = RCaller.create();\n            code = RCode.create();\n            caller.setRCode(code);\n            caller.setGraphicsTheme(new SkyTheme());\n            check(\"standard R and RScript\");\n            if(! initialized) {\n                initRdir(\"/usr/local/bin/\");\n                check(\"/usr/local/bin/\");\n            }\n            if(! initialized) {\n                initRdir(\"/Applications/anaconda3/bin/\");\n                check(\"/Applications/anaconda3/bin/\");\n            }\n            if(! initialized) {\n                System.exit(0);\n            }\n        }\n    }\n    // ------------------------------------------------------------------------\n    public static void initRdir(String dir) {\n        code = RCode.create();\n        RCallerOptions rCallerOptions = RCallerOptions.create(\n                dir + \"Rscript\",\n                dir + \"R\",\n                FailurePolicy.CONTINUE,\n                9223372036854775807L,\n                100L,\n                RProcessStartUpOptions.create()\n        );\n        try {\n            caller = RCaller.create(code, rCallerOptions);\n        }\n        catch(Exception ex){\n            StringWriter sw = new StringWriter();\n            PrintWriter pw = new PrintWriter(sw);\n            ex.printStackTrace(pw);\n            new RCaNInterfaceDialog(\"R Interface \", \"Unable to create code and caller\", ex);\n            initialized = false;\n        }\n    }\n    // ------------------------------------------------------------------------\n    static void check(String message){\n        try{\n            code.addRCode(\"test <- 0\");\n            caller.runAndReturnResult(\"test\");\n            caller.getParser();\n            initialized = true;\n            HelpDialog.warning(\"R Interface \",\"Connection to R initialized on \" +message + \"\\n\");\n        } catch(Exception ex){\n            new RCaNInterfaceDialog(\"R Interface \",\"Unable to initialize connection to R on \"\n                    + message , ex);\n            initialized = false;\n        }\n     }\n    // ------------------------------------------------------------------------\n    public static void makeRCommand(RCommandXML rCommandXML) {\n        RCaNCaller.rCommandXML = rCommandXML;\n        initRCaller();\n        plot = false;\n        filePlot = null;\n        resultString = \"\";\n        List<String> commandsR = rCommandXML.getrCompute();\n        List<String> commandsP = rCommandXML.getrPlots();\n        try {\n            code.clear();\n            code.addRCode(\"resultR <- 'ok'\");\n            if (commandsR.size() > 0) {\n                for (String commandLine : commandsR) {\n                    code.addRCode(rCommandXML.completeCommandLine( commandLine));\n                }\n            }\n            if (commandsP.size() > 0) {\n                plot = true;\n                filePlot = code.startPlot();\n                for (String commandLine : commandsP) {\n                    code.addRCode(rCommandXML.completeCommandLine( commandLine));\n                }\n                code.endPlot();\n                caller.setRCode(code);\n                Context.setChanged(false, rCommandXML.actionCommandLine());\n            }\n         } catch (Exception ex) {\n            new RCaNInterfaceDialog(\"R Interface \", \"Problem with R command.\", ex);\n        }\n    }\n    // ------------------------------------------------------------------------\n    public static void runCommandR()  {\n        runOk = false;\n        resultString = \"\";\n        try{\n            if(plot){\n                caller.runAndReturnResultOnline(\"resultR\");\n            }\n            else {\n                caller.runAndReturnResultOnline(\"resultR\", true);\n            }\n            runOk = true;\n         } catch (Exception ex) {\n            ex.printStackTrace();\n            runOk = false;\n            // stopCommandR();\n            StringWriter sw = new StringWriter();\n            PrintWriter pw = new PrintWriter(sw);\n            ex.printStackTrace(pw);\n            Platform.runLater(() ->{\n                new RCaNInterfaceDialog(\"R Interface \",\"R process has not terminated OK. \\n\\n\" + sw.toString(), ex);\n            });\n         }\n        if(runOk) {\n            resultString = RCaNParser.decodeParser( caller,  rCommandXML);\n         }\n        Context.setChanged(false, \"Result : \"+ runOk);\n    }\n    // ------------------------------------------------------------------------\n    public static void stopCommandR(){\n         try {\n            System.out.println(\"Stop R command\");\n            caller.stopRCallerAsync();\n            caller.deleteTempFiles();\n            // caller.stopStreamConsumers();\n            // caller.stopRCallerOnline();\n        } catch (Exception ex ){\n            new RCaNInterfaceDialog(\"R Interface \",\"R command not stopped properly. \\n\", ex);\n            stopSessionR();\n        }\n    }\n    // ------------------------------------------------------------------------\n    static void stopSessionR(){\n        try {\n            initialized = false;\n            Context.initRCaN();\n            MainApplication.updateMenus();\n            caller.stopStreamConsumers();\n            caller.deleteTempFiles();\n            caller.stopRCallerAsync();\n        } catch (Exception ex ) {\n            new RCaNInterfaceDialog(\"R Interface \",\"R session not stopped properly.\", ex);\n        }\n    }\n    // ------------------------------------------------------------------------\n    public static HBox getResultsR() {\n        if(runOk){\n            rCommandXML.setState(true);\n            MainApplication.updateMenus();\n            if(rCommandXML.isPlot()){\n                try {\n                    FileInputStream inputstream = new FileInputStream(filePlot);\n                    Image imageR = new Image(inputstream);\n                    return RCaNBoxesOutput.RCaNBox(imageR);\n                }\n                catch (FileNotFoundException ex){\n                    return(null);\n                }\n            }\n            else if(rCommandXML.isTable()){\n                return RCaNBoxesOutput.RCaNBox(resultString);\n            }\n        }\n        return(null);\n    }\n    // ------------------------------------------------------------------------\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/rCaller/RCaNCaller.java b/src/main/java/fr/cm/rCaller/RCaNCaller.java
--- a/src/main/java/fr/cm/rCaller/RCaNCaller.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/rCaller/RCaNCaller.java	(date 1658400090167)
@@ -5,6 +5,7 @@
 import fr.cm.GUIdialogs.HelpDialog;
 import fr.cm.RCaNMain.Context;
 import fr.cm.RCaNMain.MainApplication;
+import fr.cm.canObjects.ProjectListsManager;
 import fr.cm.xmlFiles.RCommandXML;
 import javafx.application.Platform;
 import javafx.scene.image.Image;
@@ -104,7 +105,7 @@
                 }
                 code.endPlot();
                 caller.setRCode(code);
-                Context.setChanged(false, rCommandXML.actionCommandLine());
+                ProjectListsManager.addAction(false, rCommandXML.actionCommandLine());
             }
          } catch (Exception ex) {
             new RCaNInterfaceDialog("R Interface ", "Problem with R command.", ex);
@@ -136,7 +137,7 @@
         if(runOk) {
             resultString = RCaNParser.decodeParser( caller,  rCommandXML);
          }
-        Context.setChanged(false, "Result : "+ runOk);
+        ProjectListsManager.addAction(false, "Result : "+ runOk);
     }
     // ------------------------------------------------------------------------
     public static void stopCommandR(){
Index: src/main/java/fr/cm/canObjects/Action.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.canObjects;\n\nimport fr.cm.RCaNMain.Context;\n\npublic class Action {\n\n    String date;\n    String comment;\n    String commentAuthor;\n\n    public Action(String comment){\n        this.date = Context.getDate();\n        this.comment = comment;\n        this.commentAuthor=\"\";\n    }\n    \n    public Action(String comment, String commentAuthor){\n        this.date = Context.getDate();\n        this.comment = comment;\n        this.commentAuthor=commentAuthor;\n    }\n    public Action(String date, String comment, String commentAuthor){\n        this.date = date;\n        this.comment = comment;\n        this.commentAuthor=commentAuthor;\n    }\n\n    public String getDate() {\n        return date;\n    }\n\n    public void setDate(String date) {\n        this.date = date;\n    }\n\n    public String getComment() {\n        return comment;\n    }\n\n    public void setComment(String comment) {\n        this.comment = comment;\n    }\n\n    public String getCommentAuthor() { return commentAuthor; }\n\n    public void setCommentAuthor(String commentAuthor) { this.commentAuthor = commentAuthor;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/canObjects/Action.java b/src/main/java/fr/cm/canObjects/Action.java
--- a/src/main/java/fr/cm/canObjects/Action.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/canObjects/Action.java	(date 1658391123318)
@@ -5,23 +5,23 @@
 public class Action {
 
     String date;
-    String comment;
+    String typeAction;
     String commentAuthor;
 
     public Action(String comment){
         this.date = Context.getDate();
-        this.comment = comment;
+        this.typeAction = comment;
         this.commentAuthor="";
     }
     
     public Action(String comment, String commentAuthor){
         this.date = Context.getDate();
-        this.comment = comment;
+        this.typeAction = comment;
         this.commentAuthor=commentAuthor;
     }
     public Action(String date, String comment, String commentAuthor){
         this.date = date;
-        this.comment = comment;
+        this.typeAction = comment;
         this.commentAuthor=commentAuthor;
     }
 
@@ -33,12 +33,12 @@
         this.date = date;
     }
 
-    public String getComment() {
-        return comment;
+    public String getTypeAction() {
+        return typeAction;
     }
 
-    public void setComment(String comment) {
-        this.comment = comment;
+    public void setTypeAction(String typeAction) {
+        this.typeAction = typeAction;
     }
 
     public String getCommentAuthor() { return commentAuthor; }
Index: ../RCaN/R/buildVectorConstraint.R
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#' buildVectorConstraint\n#' internal function that convert a symbolic equation of constraint into a\n#' matrix storing the coefficients of the constraint\n#' @param eq_constraint a symbolic equation corresponding to a constraint\n#' @param symbolic_enviro the symbolic environment\n#' @return a sparse matrix storing the coefficient of the constraint (first\n#' column stands for -intercept)\n#' @importFrom Matrix Matrix\n#' @importFrom symengine free_symbols\n#' @importFrom symengine get_str\n#' @importFrom symengine get_type\n#' @importFrom symengine get_args\n\n\nbuildVectorConstraint <-\n  function(eq_constraint, symbolic_enviro) {\n    coeff_const <-\n      Matrix::Matrix(0, 1, length(symbolic_enviro$param), sparse = TRUE)\n    colnames(coeff_const) <- as.character(symbolic_enviro$param)\n    basic_constraint <- (eq_constraint)\n\n    #We know check that there is no division\n    if (get_type(basic_constraint) == \"Add\") {\n      denom <- lapply(as.list(get_args(basic_constraint)),\n                      function(x) {\n                        if (!get_type(x) %in% c(\"RealDouble\", \"Symbol\")) {\n                          members <- as.list(get_args(x))\n                          types <- sapply(members, get_type)\n                          if (\"Pow\" %in% types)\n                            return(members[[which(types == \"Pow\")]])\n                          return(S(1))\n                        } else{\n                          return(S(1))\n                        }\n                      })\n\n      denominator <- 1 / do.call(\"prod\", denom)\n      nb_elem <- length(as.list(get_args(basic_constraint)))\n      numerator <- do.call(sum,\n                           lapply(seq_len(nb_elem), function(x) {\n                             as.list(get_args(basic_constraint))[[x]] *\n                               denominator\n                           }))\n    } else if (get_type(basic_constraint) != \"Mul\") {\n      numerator <- basic_constraint\n      denominator <- S(1)\n    } else {\n      members <- as.list(get_args(basic_constraint))\n      types <- sapply(members, get_type)\n      if (\"Pow\" %in% types) {\n        numerator <- do.call(sum, members[-which(types == \"Pow\")])\n        denominator <- members[which(types == \"Pow\")]\n      } else {\n        numerator <- basic_constraint\n        denominator <- S(1)\n\n      }\n    }\n\n    basic_constraint <- expand(numerator)\n\n    mycoeffs <- NULL\n\n    if (get_type(basic_constraint) != \"Add\") {\n      if (get_type(basic_constraint) == \"Symbol\") {\n        mycoeffs <- 1\n        names(mycoeffs) <- get_str(basic_constraint)\n      } else if (get_type(basic_constraint) == \"Mul\") {\n        mycoeffs <- as.numeric(as.list(get_args(basic_constraint))[[1]])\n        names(mycoeffs) <- get_str(as.list(get_args(basic_constraint))[[2]])\n      } else if (get_type(basic_constraint) == \"NaN\") {\n        mycoeffs <- NA\n        names(mycoeffs) <- \"1\"\n      }else{\n        mycoeffs <- as.numeric(basic_constraint)\n        names(mycoeffs) <- \"1\"\n      }\n    } else {\n      mycoeffs <- sapply(as.list(get_args(basic_constraint)), function(e) {\n        if (get_type(x) %in% c(\"RealDouble\", \"Symbol\")) {\n          return(c(\"1\" = as.numeric(e)))\n        } else if (get_type(e) == \"Symbol\") {\n          val <- 1\n          names(val) <- get_str(e)\n          return(val)\n        } else if (get_type(e) == \"NaN\") {\n          return(c(\"1\" = NA))\n        } else {\n          val <- as.list(get_args(e))[[1]]\n          val <- ifelse(get_type(val) == \"NaN\",\n                        NA,\n                        as.numeric(val))\n          names(val) <- get_str(as.list(get_args(e))[[2]])\n          return(val)\n        }\n      })\n    }\n    coeff_const[, names(mycoeffs)] <- mycoeffs\n    coeff_const\n  }\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../RCaN/R/buildVectorConstraint.R b/../RCaN/R/buildVectorConstraint.R
--- a/../RCaN/R/buildVectorConstraint.R	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/../RCaN/R/buildVectorConstraint.R	(date 1658384659760)
@@ -77,7 +77,7 @@
       }
     } else {
       mycoeffs <- sapply(as.list(get_args(basic_constraint)), function(e) {
-        if (get_type(x) %in% c("RealDouble", "Symbol")) {
+        if (get_type(e) %in% c("Integer", "RealDouble")) {
           return(c("1" = as.numeric(e)))
         } else if (get_type(e) == "Symbol") {
           val <- 1
Index: src/main/java/fr/cm/RCaNMain/MenuFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.RCaNMain;\n\nimport fr.cm.canObjects.ProjectListsManager;\nimport fr.cm.GUIdialogs.*;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.scene.control.MenuItem;\nimport javafx.scene.layout.BorderPane;\n\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class MenuFile {\n\n    static final MenuItem newItem = new MenuItem(\"New\");\n    static final MenuItem openFileItem = new MenuItem(\"Open\");\n    static final MenuItem saveFileItem = new MenuItem(\"Save\");\n    static final MenuItem saveAsFileItem = new MenuItem(\"Save as ...\");\n    static final MenuItem exitItem = new MenuItem(\"Exit\");\n    static BorderPane borderPaneRacine;\n\n    static List<MenuItem> menuItems = null;\n\n    public MenuFile(BorderPane borderPaneRacine) {\n        this.borderPaneRacine = borderPaneRacine;\n        menuItems = Arrays.asList(newItem, openFileItem, saveFileItem, saveAsFileItem, exitItem);\n        for (MenuItem menuItem : menuItems) {\n            menuItem.setOnAction(FileListener);\n        }\n    }\n\n    public static void updateMenus() {\n        boolean notStarted = !Context.isStarted();\n        newItem.setDisable(false);\n        openFileItem.setDisable(false);\n        saveFileItem.setDisable(notStarted);\n        saveAsFileItem.setDisable(notStarted);\n        exitItem.setDisable(false);\n    }\n\n    public static List<MenuItem> getMenuItems() {\n        return menuItems;\n    }\n\n    static final EventHandler<ActionEvent> FileListener = e -> handle(e);\n\n    private static void handle(ActionEvent e) {\n        MenuItem menuItem = (MenuItem) e.getSource();\n        int numItem = menuItems.indexOf(menuItem);\n        switch (numItem) {\n            case 0 :  // new project\n                // System.out.println(\"new project\");\n                new ProjectCreateNew();\n                if (Context.isStarted()) {\n                    Context.initRCaN();\n                    ProjectListsManager.init();\n                    MainApplication.updateMenus();\n                    borderPaneRacine.setCenter(ProjectListsManager.getNetworkView());\n                }\n                break;\n            case 1: // open project\n                // System.out.println(\"open project\");\n                new ProjectOpenExisting();\n                if (Context.isStarted()) {\n                    Context.initRCaN();\n                    ProjectListsManager.init();\n                    MainApplication.updateMenus();\n                    ProjectListsManager.getExcel();\n                    borderPaneRacine.setCenter(ProjectListsManager.getNetworkView());\n                }\n                break;\n            case 2: // save project\n                // System.out.println(\"save project\");\n                if (Context.isStarted()) {\n                    if(Context.getDirName().length() == 0){\n                        new ProjectChangeFileName();\n                    }\n                    ProjectListsManager.saveExcel();\n                    Context.setChanged(false);\n                }\n                break;\n            case 3: // save as...\n                if (Context.isStarted()) {\n                    new ProjectChangeFileName();\n                    ProjectListsManager.saveExcel();\n                    Context.setChanged(false);\n                }\n                break;\n            case 4 : // exit\n                MainApplication.close();\n                break;\n            default:\n        }\n    }\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/RCaNMain/MenuFile.java b/src/main/java/fr/cm/RCaNMain/MenuFile.java
--- a/src/main/java/fr/cm/RCaNMain/MenuFile.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/RCaNMain/MenuFile.java	(date 1658399370804)
@@ -16,6 +16,7 @@
     static final MenuItem openFileItem = new MenuItem("Open");
     static final MenuItem saveFileItem = new MenuItem("Save");
     static final MenuItem saveAsFileItem = new MenuItem("Save as ...");
+    static final MenuItem closeFileItem = new MenuItem("Close");
     static final MenuItem exitItem = new MenuItem("Exit");
     static BorderPane borderPaneRacine;
 
@@ -23,18 +24,19 @@
 
     public MenuFile(BorderPane borderPaneRacine) {
         this.borderPaneRacine = borderPaneRacine;
-        menuItems = Arrays.asList(newItem, openFileItem, saveFileItem, saveAsFileItem, exitItem);
+        menuItems = Arrays.asList(newItem, openFileItem, closeFileItem, saveFileItem, saveAsFileItem, exitItem);
         for (MenuItem menuItem : menuItems) {
             menuItem.setOnAction(FileListener);
         }
     }
 
     public static void updateMenus() {
-        boolean notStarted = !Context.isStarted();
-        newItem.setDisable(false);
-        openFileItem.setDisable(false);
-        saveFileItem.setDisable(notStarted);
-        saveAsFileItem.setDisable(notStarted);
+        boolean started = Context.isStarted();
+        newItem.setDisable(started);
+        openFileItem.setDisable(started);
+        closeFileItem.setDisable(! started);
+        saveFileItem.setDisable(! started);
+        saveAsFileItem.setDisable(! started);
         exitItem.setDisable(false);
     }
 
@@ -69,7 +71,16 @@
                     borderPaneRacine.setCenter(ProjectListsManager.getNetworkView());
                 }
                 break;
-            case 2: // save project
+            case 2: // close project
+                // System.out.println("close project");
+                if (Context.isChanged()) {
+                    new ProjectSaveBeforeClosing();
+                }
+                ProjectListsManager.init();
+                Context.setStarted(false);
+                MainApplication.updateMenus();
+               break;
+            case 3: // save project
                 // System.out.println("save project");
                 if (Context.isStarted()) {
                     if(Context.getDirName().length() == 0){
@@ -79,15 +90,15 @@
                     Context.setChanged(false);
                 }
                 break;
-            case 3: // save as...
+            case 4: // save as...
                 if (Context.isStarted()) {
                     new ProjectChangeFileName();
                     ProjectListsManager.saveExcel();
                     Context.setChanged(false);
                 }
                 break;
-            case 4 : // exit
-                MainApplication.close();
+            case 5 : // exit
+                MainApplication.exit();
                 break;
             default:
         }
Index: src/main/java/fr/cm/GUItablesViews/MetaInformationTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.GUItablesViews;\n\n\nimport fr.cm.RCaNMain.Context;\nimport fr.cm.canObjects.MetaElement;\nimport fr.cm.canObjects.ProjectListsManager;\nimport fr.cm.parameters.ColorsAndFormats;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TableCell;\nimport javafx.scene.control.TableColumn;\nimport javafx.scene.control.TableView;\nimport javafx.scene.control.cell.PropertyValueFactory;\nimport javafx.scene.control.cell.TextFieldTableCell;\nimport javafx.scene.layout.Pane;\nimport javafx.scene.layout.VBox;\nimport javafx.scene.paint.Color;\nimport javafx.scene.text.Font;\nimport javafx.scene.text.FontPosture;\nimport javafx.scene.text.FontWeight;\nimport javafx.scene.text.Text;\nimport javafx.util.Callback;\n\npublic class MetaInformationTable extends Pane {\n\n    double width = 0.9 * Context.getWindowWidth();\n    double height =  0.9 * Context.getWindowHeight();\n    final TableView<MetaElement> table;\n    ObservableList<MetaElement> list;\n    public MetaInformationTable() {\n        super();\n\n        table = new TableView<>();\n        table.setPrefWidth(width);\n        table.setPrefHeight(height);\n        table.setEditable(true);\n\n        TableColumn<MetaElement, String> metaName = new TableColumn<>(\"Field\");\n        metaName.setCellValueFactory(new PropertyValueFactory<>(\"metaName\"));\n        metaName.setEditable(false);\n        metaName.setMinWidth(width/4);\n\n\n        Callback cellFactoryMeta = new Callback<TableColumn, TableCell>() {\n            @Override\n            public TableCell call( TableColumn param) {\n                final TableCell cell = new TableCell() {\n                    private Text text;\n                    @Override\n                    public void updateItem(Object item, boolean empty) {\n                        super.updateItem(item, empty);\n                        if (!isEmpty()) {\n                            String string = item.toString();\n                            Font font;\n                            if(string.startsWith(\"<\")) {\n                                font = Font.font(\"Verdana\", FontWeight.BOLD, 18);\n                                string = string.\n                                        replace(\"<\",\"\").\n                                        replace(\">\",\"\");\n                            }\n                            else {\n                                font = Font.font(\"Verdana\", FontWeight.NORMAL, 15);\n                            };\n                            text= new Text(string);\n                            text.setFont(font);\n                            setGraphic(text);\n                        }\n                    }\n                };\n                return cell;\n            }\n        };\n        metaName.setCellFactory(cellFactoryMeta);\n        table.getColumns().add(metaName);\n        \n        TableColumn<MetaElement, String> metaContentProperty = new TableColumn<>(\"Your comments\");\n        metaContentProperty.setCellValueFactory(new PropertyValueFactory<>(\"metaContent\"));\n        metaContentProperty.setCellFactory(TextFieldTableCell.forTableColumn());\n        metaContentProperty.setEditable(true);\n        metaContentProperty.setMinWidth(width/3);\n        metaContentProperty.setOnEditCommit(\n                event -> {\n                    MetaElement metaElement = event.getTableView().getItems().get(event.getTablePosition().getRow());\n                    metaElement.setMetaContent(event.getNewValue());\n                }\n        );\n        table.getColumns().add(metaContentProperty);\n\n        TableColumn metaHint = new TableColumn<>(\"Hint\");\n        metaHint.setCellValueFactory(new PropertyValueFactory<MetaElement, String>(\"metaHint\"));\n        metaHint.setEditable(false);\n        metaHint.setMinWidth(5 * width/12);\n        Callback<TableColumn, TableCell> cellFactoryHint = new Callback<TableColumn, TableCell>() {\n            @Override\n            public TableCell call( TableColumn param) {\n                final TableCell cell = new TableCell() {\n                    private Text text;\n                    @Override\n                    public void updateItem(Object item, boolean empty) {\n                        super.updateItem(item, empty);\n                        if (!isEmpty()) {\n                            text= new Text(item.toString());\n                            Font font = Font.font(\"Verdana\", 12);\n                            text.setFont(font);\n                            text.setWrappingWidth(5 * width/12);\n                            setGraphic(text);\n                        }\n                    }\n                };\n                return cell;\n            }\n        };\n        metaHint.setCellFactory(cellFactoryHint);\n\n        table.getColumns().add(metaHint);\n\n        list = FXCollections.observableArrayList(ProjectListsManager.getMetaInformation().getElements());\n        table.setItems(list);\n        table.getSelectionModel().selectFirst();\n\n        final Label title = new Label(\"Meta Information\");\n        title.setFont(ColorsAndFormats.titleFont);\n        final VBox vbox = new VBox();\n        ColorsAndFormats.setVBoxCharacteristics(vbox);\n        vbox.getChildren().addAll(title, table);\n        this.getChildren().addAll(vbox);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/GUItablesViews/MetaInformationTable.java b/src/main/java/fr/cm/GUItablesViews/MetaInformationTable.java
--- a/src/main/java/fr/cm/GUItablesViews/MetaInformationTable.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/GUItablesViews/MetaInformationTable.java	(date 1658406583322)
@@ -26,8 +26,10 @@
 
     double width = 0.9 * Context.getWindowWidth();
     double height =  0.9 * Context.getWindowHeight();
+
     final TableView<MetaElement> table;
     ObservableList<MetaElement> list;
+
     public MetaInformationTable() {
         super();
 
@@ -54,7 +56,7 @@
                             String string = item.toString();
                             Font font;
                             if(string.startsWith("<")) {
-                                font = Font.font("Verdana", FontWeight.BOLD, 18);
+                                font = Font.font("Verdana", FontWeight.BOLD, 20);
                                 string = string.
                                         replace("<","").
                                         replace(">","");
@@ -73,7 +75,7 @@
         };
         metaName.setCellFactory(cellFactoryMeta);
         table.getColumns().add(metaName);
-        
+
         TableColumn<MetaElement, String> metaContentProperty = new TableColumn<>("Your comments");
         metaContentProperty.setCellValueFactory(new PropertyValueFactory<>("metaContent"));
         metaContentProperty.setCellFactory(TextFieldTableCell.forTableColumn());
@@ -91,6 +93,7 @@
         metaHint.setCellValueFactory(new PropertyValueFactory<MetaElement, String>("metaHint"));
         metaHint.setEditable(false);
         metaHint.setMinWidth(5 * width/12);
+
         Callback<TableColumn, TableCell> cellFactoryHint = new Callback<TableColumn, TableCell>() {
             @Override
             public TableCell call( TableColumn param) {
@@ -101,7 +104,7 @@
                         super.updateItem(item, empty);
                         if (!isEmpty()) {
                             text= new Text(item.toString());
-                            Font font = Font.font("Verdana", 12);
+                            Font font = Font.font("Verdana",FontPosture.ITALIC, 12);
                             text.setFont(font);
                             text.setWrappingWidth(5 * width/12);
                             setGraphic(text);
Index: target/packaging/add-launch-to-msi.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// run with command\n// cscript add-change.js\nvar installer = WScript.CreateObject(\"WindowsInstaller.Installer\");\nvar database = installer.OpenDatabase(\"RCaNconstructor-22.27.70916.msi\", 1);\nvar sql\nvar view\n\nsql = \"SELECT File from File where FileName='RCaNconstructor.exe'\";\nview = database.OpenView(sql);\nview.Execute();\nvar file = view.Fetch().StringData(1)\nWScript.StdErr.WriteLine(file);\nview.Close();\n\ntry {\n    sql = \"INSERT INTO `CustomAction` (`Action`,`Type`,`Source`) VALUES ('ExecuteAfterFinalize','2258','\" + file + \"')\"\n    WScript.StdErr.WriteLine(sql);\n    view = database.OpenView(sql);\n    view.Execute();\n    view.Close();\n\n    sql = \"INSERT INTO `InstallExecuteSequence` (`Action`,`Condition`,`Sequence`) VALUES ('ExecuteAfterFinalize','NOT Installed','6700')\"\n    WScript.StdErr.WriteLine(sql);\n    view = database.OpenView(sql);\n    view.Execute();\n    view.Close();\n    WScript.StdErr.WriteLine(\"Committing changes\");\n    database.Commit();\n} catch (e) {\n    WScript.StdErr.WriteLine(e);\n    WScript.Quit(1);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/packaging/add-launch-to-msi.js b/target/packaging/add-launch-to-msi.js
--- a/target/packaging/add-launch-to-msi.js	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/target/packaging/add-launch-to-msi.js	(date 1658399375385)
@@ -1,7 +1,7 @@
 // run with command
 // cscript add-change.js
 var installer = WScript.CreateObject("WindowsInstaller.Installer");
-var database = installer.OpenDatabase("RCaNconstructor-22.27.70916.msi", 1);
+var database = installer.OpenDatabase("RCaNconstructor-22.29.41015.msi", 1);
 var sql
 var view
 
Index: target/packaging/linux-jpackage.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>--name RCaNconstructor\n--icon /Users/christianmullon/git/RCaN/RCaNconstructor/app-icon.png\n--dest /Users/christianmullon/git/RCaN/RCaNconstructor/target\n--main-jar RCaNconstructor-1.0.jar\n--main-class fr.cm.RCaNMain.Start\n--input /Users/christianmullon/git/RCaN/RCaNconstructor/target/dependency\n--app-version 22.27.70916\n--runtime-image /Users/christianmullon/git/RCaN/RCaNconstructor/target/jvm-image\n--temp /Users/christianmullon/git/RCaN/RCaNconstructor/target/installer-work\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/packaging/linux-jpackage.txt b/target/packaging/linux-jpackage.txt
--- a/target/packaging/linux-jpackage.txt	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/target/packaging/linux-jpackage.txt	(date 1658399375395)
@@ -4,6 +4,6 @@
 --main-jar RCaNconstructor-1.0.jar
 --main-class fr.cm.RCaNMain.Start
 --input /Users/christianmullon/git/RCaN/RCaNconstructor/target/dependency
---app-version 22.27.70916
+--app-version 22.29.41015
 --runtime-image /Users/christianmullon/git/RCaN/RCaNconstructor/target/jvm-image
 --temp /Users/christianmullon/git/RCaN/RCaNconstructor/target/installer-work
Index: target/packaging/mac-jpackage.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>--name RCaNconstructor\n--icon /Users/christianmullon/git/RCaN/RCaNconstructor/app-icon.icns\n--dest /Users/christianmullon/git/RCaN/RCaNconstructor/target\n--main-jar RCaNconstructor-1.0.jar\n--main-class fr.cm.RCaNMain.Start\n--input /Users/christianmullon/git/RCaN/RCaNconstructor/target/dependency\n--app-version 22.27.70916\n--runtime-image /Users/christianmullon/git/RCaN/RCaNconstructor/target/jvm-image\n--temp /Users/christianmullon/git/RCaN/RCaNconstructor/target/installer-work\n--mac-sign\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/packaging/mac-jpackage.txt b/target/packaging/mac-jpackage.txt
--- a/target/packaging/mac-jpackage.txt	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/target/packaging/mac-jpackage.txt	(date 1658399375383)
@@ -4,7 +4,7 @@
 --main-jar RCaNconstructor-1.0.jar
 --main-class fr.cm.RCaNMain.Start
 --input /Users/christianmullon/git/RCaN/RCaNconstructor/target/dependency
---app-version 22.27.70916
+--app-version 22.29.41015
 --runtime-image /Users/christianmullon/git/RCaN/RCaNconstructor/target/jvm-image
 --temp /Users/christianmullon/git/RCaN/RCaNconstructor/target/installer-work
 --mac-sign
Index: target/packaging/win-jpackage.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>--type msi\n--name RCaNconstructor\n--win-menu\n--win-menu-group ${vendor}\n--vendor Sample\n--icon /Users/christianmullon/git/RCaN/RCaNconstructor\\app-icon.ico\n--dest /Users/christianmullon/git/RCaN/RCaNconstructor/target\n--main-jar RCaNconstructor-1.0.jar\n--main-class fr.cm.RCaNMain.Start\n--input /Users/christianmullon/git/RCaN/RCaNconstructor/target\\dependency\n--app-version 22.27.70916\n--runtime-image /Users/christianmullon/git/RCaN/RCaNconstructor/target\\jvm-image\n--temp /Users/christianmullon/git/RCaN/RCaNconstructor/target\\installer-work\n--win-upgrade-uuid aaaaaaaa-0000-aaaa-aaaa-aaaaaaaaaaaa\n--description \"${project.description}\"\n--copyright \"(C) Sample\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/packaging/win-jpackage.txt b/target/packaging/win-jpackage.txt
--- a/target/packaging/win-jpackage.txt	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/target/packaging/win-jpackage.txt	(date 1658399375389)
@@ -8,9 +8,9 @@
 --main-jar RCaNconstructor-1.0.jar
 --main-class fr.cm.RCaNMain.Start
 --input /Users/christianmullon/git/RCaN/RCaNconstructor/target\dependency
---app-version 22.27.70916
+--app-version 22.29.41015
 --runtime-image /Users/christianmullon/git/RCaN/RCaNconstructor/target\jvm-image
 --temp /Users/christianmullon/git/RCaN/RCaNconstructor/target\installer-work
 --win-upgrade-uuid aaaaaaaa-0000-aaaa-aaaa-aaaaaaaaaaaa
---description "${project.description}"
+--description "RCaNconstructor application"
 --copyright "(C) Sample"
\ No newline at end of file
Index: RCaNconstructor.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_15\">\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/src/packaging\" type=\"java-resource\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n    <orderEntry type=\"library\" name=\"Maven: com.github.javafaker:javafaker:1.0.2\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.apache.commons:commons-lang3:3.5\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.yaml:snakeyaml:android:1.23\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: com.github.mifmif:generex:1.0.2\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: dk.brics.automaton:automaton:1.11-8\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: commons-io:commons-io:2.4\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-controls:mac:16\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-graphics:16\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-graphics:mac:16\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-base:16\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-base:mac:16\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-fxml:mac:16\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-controls:16\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.apache.poi:poi-ooxml:4.1.0\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.apache.poi:poi:4.1.0\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: commons-codec:commons-codec:1.12\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.apache.commons:commons-collections4:4.3\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.apache.commons:commons-math3:3.6.1\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.apache.poi:poi-ooxml-schemas:4.1.0\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.apache.xmlbeans:xmlbeans:3.1.0\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.apache.commons:commons-compress:1.18\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: com.github.virtuald:curvesapi:1.06\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: com.github.jbytecode:RCaller:jar-with-dependencies:4.0.2\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: junit:junit:4.13.2\" level=\"project\" />\n    <orderEntry type=\"library\" name=\"Maven: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RCaNconstructor.iml b/RCaNconstructor.iml
--- a/RCaNconstructor.iml	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/RCaNconstructor.iml	(date 1658399370441)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_15">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_17">
     <output url="file://$MODULE_DIR$/target/classes" />
     <output-test url="file://$MODULE_DIR$/target/test-classes" />
     <content url="file://$MODULE_DIR$">
@@ -17,13 +17,13 @@
     <orderEntry type="library" name="Maven: com.github.mifmif:generex:1.0.2" level="project" />
     <orderEntry type="library" name="Maven: dk.brics.automaton:automaton:1.11-8" level="project" />
     <orderEntry type="library" name="Maven: commons-io:commons-io:2.4" level="project" />
-    <orderEntry type="library" name="Maven: org.openjfx:javafx-controls:mac:16" level="project" />
-    <orderEntry type="library" name="Maven: org.openjfx:javafx-graphics:16" level="project" />
-    <orderEntry type="library" name="Maven: org.openjfx:javafx-graphics:mac:16" level="project" />
-    <orderEntry type="library" name="Maven: org.openjfx:javafx-base:16" level="project" />
-    <orderEntry type="library" name="Maven: org.openjfx:javafx-base:mac:16" level="project" />
-    <orderEntry type="library" name="Maven: org.openjfx:javafx-fxml:mac:16" level="project" />
-    <orderEntry type="library" name="Maven: org.openjfx:javafx-controls:16" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-controls:mac:18" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-graphics:18" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-graphics:mac:18" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-base:18" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-base:mac:18" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-fxml:mac:18" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-controls:18" level="project" />
     <orderEntry type="library" name="Maven: org.apache.poi:poi-ooxml:4.1.0" level="project" />
     <orderEntry type="library" name="Maven: org.apache.poi:poi:4.1.0" level="project" />
     <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.12" level="project" />
Index: src/main/java/fr/cm/GUItablesViews/ActionTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.GUItablesViews;\n\n\nimport fr.cm.RCaNMain.Context;\nimport fr.cm.canObjects.Action;\nimport fr.cm.canObjects.Component;\nimport fr.cm.canObjects.ProjectListsManager;\nimport fr.cm.parameters.ColorsAndFormats;\nimport javafx.collections.FXCollections;\nimport javafx.collections.ObservableList;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.TableColumn;\nimport javafx.scene.control.TableView;\nimport javafx.scene.control.cell.PropertyValueFactory;\nimport javafx.scene.control.cell.TextFieldTableCell;\nimport javafx.scene.layout.Pane;\nimport javafx.scene.layout.VBox;\n\npublic class ActionTable extends Pane {\n\n    final TableView<Action> table;\n    ObservableList<Action> list;\n\n    double width = 0.9 * Context.getWindowWidth();\n    double height =  0.9 * Context.getWindowHeight();\n\n    public ActionTable() {\n        table = new TableView<>();\n        table.setMinWidth(800.0);\n        table.setEditable(true);\n\n        TableColumn<Action, String> date = new TableColumn<>(\"Date\");\n        date.setCellValueFactory(new PropertyValueFactory<>(\"date\"));\n        date.setMinWidth(300.0);\n\n        TableColumn<Action, String> comment = new TableColumn<>(\"Comment\");\n        comment.setCellValueFactory(new PropertyValueFactory<>(\"comment\"));\n        comment.setMinWidth(500.0);\n\n        TableColumn<Action, String> commentAuthor = new TableColumn<>(\"Comment Author\");\n        commentAuthor.setCellFactory(TextFieldTableCell.forTableColumn());\n        commentAuthor.setCellValueFactory(new PropertyValueFactory<>(\"commentAuthor\"));\n        commentAuthor.setMinWidth(500.0);\n        commentAuthor.setEditable(true);\n        commentAuthor.setOnEditCommit(\n                event -> {\n                    Action action = event.getTableView().getItems().get(event.getTablePosition().getRow());\n                    action.setCommentAuthor(event.getNewValue());\n                }\n        );\n\n        table.getColumns().add(date);\n        table.getColumns().add(comment);\n        table.getColumns().add(commentAuthor);\n\n        list = FXCollections.observableArrayList(ProjectListsManager.getListOfActions());\n        table.setItems(list);\n        table.getSelectionModel().selectFirst();\n\n        final Label title = new Label(\"System fluxes\");\n        title.setFont(ColorsAndFormats.titleFont);\n        final VBox vbox = new VBox();\n        ColorsAndFormats.setVBoxCharacteristics(vbox);\n        vbox.getChildren().addAll(title, table);\n        this.getChildren().addAll(vbox);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/GUItablesViews/ActionTable.java b/src/main/java/fr/cm/GUItablesViews/ActionTable.java
--- a/src/main/java/fr/cm/GUItablesViews/ActionTable.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/GUItablesViews/ActionTable.java	(date 1658406889279)
@@ -26,21 +26,21 @@
 
     public ActionTable() {
         table = new TableView<>();
-        table.setMinWidth(800.0);
+        table.setMinWidth(width);
         table.setEditable(true);
 
         TableColumn<Action, String> date = new TableColumn<>("Date");
         date.setCellValueFactory(new PropertyValueFactory<>("date"));
-        date.setMinWidth(300.0);
+        date.setMinWidth(0.2 *width);
 
-        TableColumn<Action, String> comment = new TableColumn<>("Comment");
-        comment.setCellValueFactory(new PropertyValueFactory<>("comment"));
-        comment.setMinWidth(500.0);
+        TableColumn<Action, String> comment = new TableColumn<>("Task");
+        comment.setCellValueFactory(new PropertyValueFactory<>("typeAction"));
+        comment.setMinWidth(0.3 *width);
 
         TableColumn<Action, String> commentAuthor = new TableColumn<>("Comment Author");
         commentAuthor.setCellFactory(TextFieldTableCell.forTableColumn());
         commentAuthor.setCellValueFactory(new PropertyValueFactory<>("commentAuthor"));
-        commentAuthor.setMinWidth(500.0);
+        commentAuthor.setMinWidth((0.45 *width));
         commentAuthor.setEditable(true);
         commentAuthor.setOnEditCommit(
                 event -> {
@@ -57,7 +57,7 @@
         table.setItems(list);
         table.getSelectionModel().selectFirst();
 
-        final Label title = new Label("System fluxes");
+        final Label title = new Label("RCaN Tasks");
         title.setFont(ColorsAndFormats.titleFont);
         final VBox vbox = new VBox();
         ColorsAndFormats.setVBoxCharacteristics(vbox);
Index: .idea/libraries/Maven__org_openjfx_javafx_base_16.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_base_16.xml b/.idea/libraries/Maven__org_openjfx_javafx_base_18.xml
rename from .idea/libraries/Maven__org_openjfx_javafx_base_16.xml
rename to .idea/libraries/Maven__org_openjfx_javafx_base_18.xml
--- a/.idea/libraries/Maven__org_openjfx_javafx_base_16.xml	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/.idea/libraries/Maven__org_openjfx_javafx_base_18.xml	(date 1658399370479)
@@ -1,13 +1,13 @@
 <component name="libraryTable">
-  <library name="Maven: org.openjfx:javafx-base:16">
+  <library name="Maven: org.openjfx:javafx-base:18">
     <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/16/javafx-base-16.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/18/javafx-base-18.jar!/" />
     </CLASSES>
     <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/16/javafx-base-16-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/18/javafx-base-18-javadoc.jar!/" />
     </JAVADOC>
     <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/16/javafx-base-16-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/18/javafx-base-18-sources.jar!/" />
     </SOURCES>
   </library>
 </component>
\ No newline at end of file
Index: src/main/java/fr/cm/excel/ExcelManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.cm.excel;\n\nimport fr.cm.canObjects.*;\nimport fr.cm.GUIdialogs.HelpDialog;\nimport fr.cm.parameters.Strings;\nimport org.apache.poi.ss.usermodel.*;\n\nimport fr.cm.RCaNMain.Context;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.List;\n\n/**\n * @author christianmullon\n */\npublic class ExcelManager {\n\n    // -------------------------------------------------------------------------\n    public static void saveExcel() {\n        String fileName = Context.getFullFileName();\n        try {\n            Workbook workbook = WorkbookFactory.create(true);\n            saveExcelMetaInformation(workbook);\n            saveExcelComponents(workbook);\n            saveExcelLinks(workbook);\n            saveExcelConstraints(workbook);\n            saveExcelObservations(workbook);\n            saveExcelFileWithObservation(workbook);\n            saveExcelFileActions(workbook);\n            FileOutputStream outputStream = new FileOutputStream(fileName);\n            workbook.write(outputStream);\n        } catch (FileNotFoundException ex) {\n            HelpDialog.warning(\"File not found\",\"Warning\", ex);\n        } catch (IOException ex) {\n            HelpDialog.warning(\"IO problem\",\"Warning\", ex);\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    public static void getExcel() {\n        String fileName = Context.getFullFileName();\n        try {\n            FileInputStream inputStream = new FileInputStream(new File(fileName));\n            Workbook workbook = WorkbookFactory.create(inputStream);\n            getExcelMetaInformation(workbook);\n            getExcelComponents(workbook);\n            getExcelLinks(workbook);\n            getExcelConstraints(workbook);\n            getExcelObservations(workbook);\n            getExcelFileWithObservation(workbook);\n            getExcelFileActions(workbook);\n        } catch (FileNotFoundException ex) {\n            HelpDialog.warning(\"File not found\",\"Warning\", ex);\n        } catch (IOException ex) {\n            HelpDialog.warning(\"IO problem\",\"Warning\", ex);\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    private static void saveExcelFileActions(Workbook workbook) {\n        Sheet sheet;\n        Row row;\n        Cell cell;\n        sheet = workbook.createSheet(\"Actions\");\n\n        row = sheet.createRow(0);\n        cell = row.createCell(0);\n        cell.setCellValue(\"Date\");\n        cell = row.createCell(1);\n        cell.setCellValue(\"Comment\");\n\n        List<Action> listOfActions = ProjectListsManager.getListOfActions();\n        int c = 0;\n        for (Action action : listOfActions) {\n            c++;\n            row = sheet.createRow(c + 1);\n            cell = row.createCell(0);\n            cell.setCellValue(action.getDate());\n            cell = row.createCell(1);\n            cell.setCellValue(action.getComment());\n            cell = row.createCell(2);\n            cell.setCellValue(action.getCommentAuthor());\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    public static void getExcelFileActions(Workbook workbook) {\n        ProjectListsManager.initListOfActions();\n        Sheet sheet = workbook.getSheet(\"Actions\");\n        Row row;\n        Cell cell;\n        Iterator<Row> iterator = sheet.iterator();\n        iterator.next();\n        while (iterator.hasNext()) {\n            row = iterator.next();\n            cell = row.getCell(0);\n            String date = cell.getStringCellValue();\n            cell = row.getCell(1);\n            String comment = cell.getStringCellValue();\n            String commentAuthor =\"\";\n            try{\n                cell = row.getCell(2);\n                commentAuthor = cell.getStringCellValue();\n            }\n            catch(Exception e){};\n            Action newAction = new Action(date, comment,commentAuthor);\n            ProjectListsManager.addAction(newAction);\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    private static void saveExcelMetaInformation(Workbook workbook) {\n        Sheet sheet;\n        Row row;\n        Cell cell;\n        sheet = workbook.createSheet(\"INFO\");\n\n        row = sheet.createRow(0);\n        cell = row.createCell(0);\n        cell.setCellValue(\"PathName\");\n        cell = row.createCell(1);\n        cell.setCellValue(Context.getFullFileName());\n\n        row = sheet.createRow(1);\n        cell = row.createCell(0);\n        cell.setCellValue(\"Caracteristic\");\n        cell = row.createCell(1);\n        cell.setCellValue(\"Value\");\n\n        MetaInformation metaInformation = ProjectListsManager.getMetaInformation();\n        List<MetaElement> elements = metaInformation.getElements();\n        for (int c = 0; c < elements.size(); c++) {\n            MetaElement element = elements.get(c);\n            row = sheet.createRow(c + 2);\n            cell = row.createCell(0);\n            cell.setCellValue(element.getMetaName());\n            cell = row.createCell(1);\n            cell.setCellValue(element.getMetaContent());\n            cell = row.createCell(2);\n            cell.setCellValue(element.getMetaHint());\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    public static void getExcelMetaInformation(Workbook workbook) {\n        new MetaInformation();\n        Sheet sheet = workbook.getSheet(\"INFO\");\n        Row row;\n        Cell cell;\n        MetaInformation metaInformation = ProjectListsManager.getMetaInformation();\n        List<MetaElement> elements = metaInformation.getElements();\n        try {\n            for (int c = 0; c < elements.size(); c++) {\n                row = sheet.getRow(c + 2);\n                cell = row.getCell(1);\n                String content = cell.getStringCellValue();\n                elements.get(c).setMetaContent(content);\n            }\n        } catch (Exception e) {\n            new MetaInformation();\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    private static void saveExcelComponents(Workbook workbook) {\n        String[] parametersNames = Strings.getParametersNames();\n        int np = parametersNames.length;\n        Sheet sheet;\n        Row row;\n        Cell cell;\n        sheet = workbook.createSheet(\"Components & input parameter\");\n        int liP = 0;\n        row = sheet.createRow(liP);\n        liP++;\n        cell = row.createCell(0);\n        cell.setCellValue(\"Component\");\n        cell = row.createCell(1);\n        cell.setCellValue(\"Inside\");\n        for (int p = 0; p < np; p++) {\n            cell = row.createCell(p + 2);\n            cell.setCellValue(parametersNames[p]);\n        }\n        cell = row.createCell(np + 2);\n        cell.setCellValue(\"X\");\n        cell = row.createCell(np + 3);\n        cell.setCellValue(\"Y\");\n\n        for (Component component : ProjectListsManager.getListOfComponents()) {\n            row = sheet.createRow(liP);\n            liP++;\n            cell = row.createCell(0);\n            cell.setCellValue(component.getName());\n            cell = row.createCell(1);\n            cell.setCellValue(  transformBoolean(component.isInside()));\n            for (int p = 0; p < np; p++) {\n                double val = component.getParameters()[p];\n                if (val >= 0) {\n                    cell = row.createCell(p + 2);\n                    cell.setCellValue(val);\n                }\n            }\n            cell = row.createCell(np + 2);\n            cell.setCellValue(component.getX());\n            cell = row.createCell(np + 3);\n            cell.setCellValue(component.getY());\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    private static void getExcelComponents(Workbook workbook) {\n        int np = Strings.getNumberOfParameters();\n        double[] parameters = new double[np];\n        Sheet sheet;\n        Row row;\n        Cell cell;\n        sheet = workbook.getSheet(\"Components & input parameter\");\n        Iterator<Row> iterator = sheet.iterator();\n        row = iterator.next();\n        Iterator<Cell> iteratorR = row.cellIterator();\n        List<String> colNames  = new ArrayList<>();\n        while (iteratorR.hasNext()) {\n            cell = iteratorR.next();\n            String var = cell.getStringCellValue();\n            colNames.add(var);\n         }\n        while (iterator.hasNext()) {\n            row = iterator.next();\n            cell = row.getCell(0);\n            String nameComponent = cell.getStringCellValue();\n            cell = row.getCell(1);\n            boolean typeComponent = getBoolean(cell);\n            for (int p = 0; p < np; p++) {\n                String varName = Strings.getParametersNames(p);\n                int ip = colNames.indexOf(varName);\n                cell = row.getCell(ip);\n                if (cell == null) {\n                    parameters[p] = -1.0;\n                } else {\n                    parameters[p] = cell.getNumericCellValue();\n                }\n            }\n            double x;\n            double y;\n            try {\n                int ix = colNames.indexOf(\"X\");\n                cell = row.getCell(ix);\n                x = cell.getNumericCellValue();\n                int iy = colNames.indexOf(\"Y\");\n                cell = row.getCell(iy);\n                y = cell.getNumericCellValue();\n            } catch (Exception e) {\n                x = 0.2 + 0.6 * Math.random();\n                y = 0.2 + 0.4 * Math.random();\n            }\n            Component component = new Component(nameComponent, parameters, typeComponent, x, y);\n            ProjectListsManager.addComponent(component);\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    private static void saveExcelLinks(Workbook workbook) {\n        Sheet sheet;\n        Row row;\n        Cell cell;\n        sheet = workbook.createSheet(\"Fluxes\");\n        int liL = 0;\n        row = sheet.createRow(liL);\n        liL++;\n        cell = row.createCell(0);\n        cell.setCellValue(\"Flux\");\n        cell = row.createCell(1);\n        cell.setCellValue(\"From\");\n        cell = row.createCell(2);\n        cell.setCellValue(\"To\");\n        cell = row.createCell(3);\n        cell.setCellValue(\"Trophic\");\n        for (Flux flux : ProjectListsManager.getListOfFluxes()) {\n            row = sheet.createRow(liL);\n            liL++;\n            cell = row.createCell(0);\n            cell.setCellValue(flux.getName());\n            cell = row.createCell(1);\n            cell.setCellValue(flux.getIn().getName());\n            cell = row.createCell(2);\n            cell.setCellValue(flux.getOut().getName());\n            cell = row.createCell(3);\n            cell.setCellValue(transformBoolean(flux.isTypeTrophic()));\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    private static void getExcelLinks(Workbook workbook) {\n        Sheet sheet = workbook.getSheet(\"Fluxes\");\n        Row row;\n        Cell cell;\n        Iterator<Row> iterator = sheet.iterator();\n        iterator.next();\n        while (iterator.hasNext()) {\n            row = iterator.next();\n            cell = row.getCell(0);\n            String name = cell.getStringCellValue();\n            cell = row.getCell(1);\n            String in = cell.getStringCellValue();\n            cell = row.getCell(2);\n            String out = cell.getStringCellValue();\n            cell = row.getCell(3);\n            boolean stype = getBoolean(cell);\n            Flux newFlux = new Flux(in, out, stype);\n            ProjectListsManager.addLink(newFlux);\n        }\n    }\n\n    // ---------------------------------------------------------------------\n    private static void saveExcelObservations(Workbook workbook) {\n        int first = Context.getFirstYear();\n        int last = Context.getLastYear();\n        int ny = last - first + 1;\n\n        Sheet sheet;\n        Cell cell;\n        Row row;\n        int o;\n        sheet = workbook.createSheet(\"Input time-series\");\n        row = sheet.createRow(0);\n        cell = row.createCell(0);\n        cell.setCellValue(\"Year\");\n        o = 0;\n        for (Observation observation : ProjectListsManager.getListOfObservations()) {\n            o++;\n            cell = row.createCell(o);\n            cell.setCellValue(observation.getObsName());\n        }\n\n        for (int y = 0; y < ny; y++) {\n            o = 0;\n            row = sheet.createRow(y + 1);\n            cell = row.createCell(0);\n            cell.setCellValue(y + first);\n            for (Observation observation : ProjectListsManager.getListOfObservations()) {\n                o++;\n                double val = observation.getValues()[y];\n                if (val >= 0.0) {\n                    cell = row.createCell(o);\n                    cell.setCellValue(observation.getValues()[y]);\n                }\n            }\n        }\n    }\n\n    static int getIntFromCell(Cell cell){\n        CellType cellType = cell.getCellType();\n        try {\n            if (cellType == CellType.NUMERIC) {\n                int stringCellValue = (int) cell.getNumericCellValue();\n                return stringCellValue;\n            } else if (cellType == CellType.STRING) {\n                int stringCellValue = Integer.parseInt(cell.getStringCellValue());\n                return stringCellValue;\n            }\n        } catch(Exception ex){\n            return(-1);\n        }\n        return(-1);\n    }\n\n    static double getDoubleFromCell(Cell cell){\n        try {\n            CellType cellType = cell.getCellType();\n            if (cellType == CellType.NUMERIC) {\n                double stringCellValue = cell.getNumericCellValue();\n                return stringCellValue;\n            } else if (cellType == CellType.STRING) {\n                double stringCellValue = Double.parseDouble(cell.getStringCellValue());\n                return stringCellValue;\n            }\n        } catch(Exception ex){\n            return(-1.0);\n        }\n        return(-1.0);\n    }\n\n    // -------------------------------------------------------------------------\n    private static void getExcelObservations(Workbook workbook) {\n        int first = 5000;\n        int last = -5000;\n        Sheet sheet;\n        Cell cell;\n        Row row;\n\n        sheet = workbook.getSheet(\"Input time-series\");\n        Iterator<Row> iteratorRow = sheet.iterator();\n        // Identifiants des colonnes dans la première ligne\n        List<String> idObs = new ArrayList<>();\n        row = iteratorRow.next();\n        Iterator<Cell> iteratorCell = row.iterator();\n        iteratorCell.next(); // on saute la premiere colonne\n        while (iteratorCell.hasNext()) {\n            cell = iteratorCell.next();\n            String scell = cell.toString();\n            idObs.add(scell);\n        }\n        //  Identifiants des années dans la premiere colonne a partir de la deuxieme ligne\n        while (iteratorRow.hasNext()) {\n            row = iteratorRow.next();\n            cell = row.getCell(0);\n            if(cell != null) {\n                int val = getIntFromCell(cell);\n                first = Math.min(first, val);\n                last = Math.max(last, val);\n            }\n        }\n        Context.setLastYear(last);\n        Context.setFirstYear(first);\n        int nbo = idObs.size();\n        if(nbo>0) {\n            int nby = last - first + 1;\n            double[][] values = new double[nbo][nby];\n            for (int y = 0; y < nby; y++) {\n                row = sheet.getRow(y + 1);\n                for (int o = 0; o < nbo; o++) {\n                    cell = row.getCell(o + 1);\n                    double val = getDoubleFromCell(cell);\n                    values[o][y] = val;\n                }\n            }\n            for (int o = 0; o < nbo; o++) {\n                Observation observation = new Observation(idObs.get(o), values[o]);\n                ProjectListsManager.addObservation(observation);\n            }\n        }\n    }\n\n    // ---------------------------------------------------------------------\n    private static void saveExcelConstraints(Workbook workbook) {\n        Sheet sheet;\n        Row row;\n        Cell cell;\n        sheet = workbook.createSheet(\"Constraints\");\n        int lig = 0;\n        row = sheet.createRow(lig);\n        cell = row.createCell(0);\n        cell.setCellValue(\"Id\");\n        cell = row.createCell(1);\n        cell.setCellValue(\"Constraint\");\n        cell = row.createCell(2);\n        cell.setCellValue(\"Time-range\");\n        cell = row.createCell(3);\n        cell.setCellValue(\"Active\");\n        cell = row.createCell(4);\n        cell.setCellValue(\"Comment\");\n        lig++;\n        for (int c = 0; c < ProjectListsManager.getListOfConstraints().size(); c++) {\n            Constraint constraint = ProjectListsManager.getListOfConstraints().get(c);\n            row = sheet.createRow(lig);\n            cell = row.createCell(0);\n            cell.setCellValue(constraint.getName());\n            cell = row.createCell(1);\n            cell.setCellValue(constraint.getFormula());\n            cell = row.createCell(2);\n            cell.setCellValue(constraint.getYears());\n            cell = row.createCell(3);\n            cell.setCellValue(transformBoolean(constraint.isActive()));\n            cell = row.createCell(4);\n            cell.setCellValue(constraint.getComment());\n            lig++;\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    private static void getExcelConstraints(Workbook workbook) {\n        Sheet sheet = workbook.getSheet(\"Constraints\");\n        Row row;\n        Cell cell;\n        Iterator<Row> iterator = sheet.iterator();\n        iterator.next();\n        String name;\n        String formula ;\n        String years;\n        boolean active;\n        String comment;\n        while (iterator.hasNext()) {\n            try {\n                row = iterator.next();\n                cell = row.getCell(0);\n                name = cell.getStringCellValue();\n                cell = row.getCell(1);\n                formula = cell.getStringCellValue();\n                cell = row.getCell(2);\n                years = cell.getStringCellValue();\n                cell = row.getCell(3);\n                active = getBoolean(cell);\n                cell = row.getCell(4);\n                if(cell == null) {\n                    comment = name;\n                } else {\n                    comment = cell.getStringCellValue();\n                }\n                Constraint constraint = new Constraint(name, formula, years, active, comment);\n                ProjectListsManager.addConstraint(constraint);\n            } catch (Exception e) {\n                // le champ active n'existe pas encore\n            }\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    private static void saveExcelFileWithObservation(Workbook workbook) {\n        Sheet sheet;\n        Row row;\n        Cell cell;\n        sheet = workbook.createSheet(\"FileWithObservation\");\n        int lig = 0;\n        row = sheet.createRow(lig);\n        cell = row.createCell(0);\n        cell.setCellValue(\"File name\");\n        cell = row.createCell(1);\n        cell.setCellValue(\"Full file name\");\n        cell = row.createCell(2);\n        cell.setCellValue(\"Meta information\");\n        cell = row.createCell(3);\n        cell.setCellValue(\"Owner\");\n        cell = row.createCell(4);\n        cell.setCellValue(\"First year\");\n        cell = row.createCell(5);\n        cell.setCellValue(\"Last year\");\n        cell = row.createCell(6);\n        cell.setCellValue(\"Selected columns\");\n        lig++;\n        for (int c = 0; c < ProjectListsManager.getListOfDataFiles().size(); c++) {\n            DataFile dataFile = ProjectListsManager.getListOfDataFiles().get(c);\n            row = sheet.createRow(lig);\n            cell = row.createCell(0);\n            cell.setCellValue(dataFile.getShortName());\n            cell = row.createCell(1);\n            cell.setCellValue(dataFile.getFullFileName());\n            cell = row.createCell(2);\n            cell.setCellValue(dataFile.getMetaInformationAboutDataFile());\n            cell = row.createCell(3);\n            cell.setCellValue(dataFile.getOwner());\n            cell = row.createCell(4);\n            cell.setCellValue(dataFile.codeAddedObservations());\n            lig++;\n        }\n    }\n\n\n    // -------------------------------------------------------------------------\n    private static void getExcelFileWithObservation(Workbook workbook) {\n        try {\n            Sheet sheet = workbook.getSheet(\"FileWithObservation\");\n            Row row;\n            Cell cell;\n            Iterator<Row> iterator = sheet.iterator();\n            iterator.next();\n            while (iterator.hasNext()) {\n                row = iterator.next();\n                cell = row.getCell(0);\n                String shortName = cell.getStringCellValue();\n                cell = row.getCell(1);\n                String fullFileName = cell.getStringCellValue();\n                cell = row.getCell(2);\n                String metaInformation = cell.getStringCellValue();\n                cell = row.getCell(3);\n                String owner = cell.getStringCellValue();\n                cell = row.getCell(4);\n                String listOfObservations = cell.getStringCellValue();\n                DataFile dataFile = new DataFile(\n                        shortName,\n                        fullFileName,\n                        metaInformation,\n                        owner,\n                        listOfObservations);\n                if(dataFile.isStillExisting()){\n                    ProjectListsManager.addDataFile(dataFile);\n                }\n            }\n        } catch (Exception e) {\n            System.out.println(\"Probleme pour lire la liste des fichiers avec observations\");\n            e.printStackTrace();\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    static boolean getBoolean(Cell cell){\n        CellType type = cell.getCellType();\n        boolean active = false;\n        if (type == CellType.STRING) {\n            if (cell.getStringCellValue().equals(\"TRUE\")\n                    || cell.getStringCellValue().equals(\"1\")) {\n                active = true;\n            }\n        } else if (type == CellType.BOOLEAN) {\n            active = cell.getBooleanCellValue();\n        } else if (type == CellType.NUMERIC){\n            if(cell.getNumericCellValue()==1){\n                active = true;\n            }\n        }\n        return(active);\n    }\n\n    // -------------------------------------------------------------------------\n    static int transformBoolean(boolean active){\n        if(active) return(1);\n        return(0);\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/fr/cm/excel/ExcelManager.java b/src/main/java/fr/cm/excel/ExcelManager.java
--- a/src/main/java/fr/cm/excel/ExcelManager.java	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/src/main/java/fr/cm/excel/ExcelManager.java	(date 1658402080300)
@@ -35,6 +35,7 @@
             saveExcelFileActions(workbook);
             FileOutputStream outputStream = new FileOutputStream(fileName);
             workbook.write(outputStream);
+            ProjectListsManager.addAction(false,"Saved file : "+fileName);
         } catch (FileNotFoundException ex) {
             HelpDialog.warning("File not found","Warning", ex);
         } catch (IOException ex) {
@@ -55,6 +56,7 @@
             getExcelObservations(workbook);
             getExcelFileWithObservation(workbook);
             getExcelFileActions(workbook);
+            ProjectListsManager.addAction(false,"Open file : "+fileName);
         } catch (FileNotFoundException ex) {
             HelpDialog.warning("File not found","Warning", ex);
         } catch (IOException ex) {
@@ -83,7 +85,7 @@
             cell = row.createCell(0);
             cell.setCellValue(action.getDate());
             cell = row.createCell(1);
-            cell.setCellValue(action.getComment());
+            cell.setCellValue(action.getTypeAction());
             cell = row.createCell(2);
             cell.setCellValue(action.getCommentAuthor());
         }
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>fr.cm</groupId>\n    <artifactId>RCaNconstructor</artifactId>\n    <version>1.0</version>\n\n    <!-- This description text is included in the Windows installer by default, see win-jpackage.txt -->\n    <description>RCaNconstructor application</description>\n\n    <properties>\n        <!-- Set this to the class with the main method for your application -->\n        <main-class>fr.cm.RCaNMain.Start</main-class>\n        <!-- Change your app's name to something interesting... but you might want to avoid spaces\n        just to safe for compatibility across operating systems. -->\n        <app.name>RCaNconstructor</app.name>\n        <!-- This converts the build timestamp to a Windows-installer friendly version number (minute level resolution).\n        Note that Maven generated timestamp is in UTC, not local time. For more information see:\n         https://docs.microsoft.com/en-us/windows/win32/msi/productversion\n         https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/text/SimpleDateFormat.html\n         -->\n        <maven.build.timestamp.format>yy.w.ukkmm</maven.build.timestamp.format>\n        <app.version>${maven.build.timestamp}</app.version>\n\n        <!-- This property is used to specify the modules included in the (custom) JVM image. -->\n        <!-- Reminder: javafx.web (the embedded browser component) is not included in this project by default due\n        to GitHub template size restrictions. You can download the full SDK from https://openjfx.io -->\n        <jvm.modules>javafx.media,javafx.controls,javafx.fxml,java.logging,jdk.charsets</jvm.modules>\n        \n        \n        <!-- Set the project to UTF-8, avoiding warnings in the build logs -->\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\n        <maven.compiler.source>17</maven.compiler.source>\n        <maven.compiler.target>17</maven.compiler.target>\n\n        <!-- Used to set both the path to find the JavaFX modules and also the versions for Maven dependencies -->\n        <javafx.version>16</javafx.version>\n        \n        <!-- Replace this UUID with a custom one for your project. This ID is used by the Windows installer system\n        to know that an installer is intended to replace/upgrade an earlier version. The easiest thing to do is\n        grab a unique UUID via https://www.uuidgenerator.net -->\n        <windows.upgrade.uuid>aaaaaaaa-0000-aaaa-aaaa-aaaaaaaaaaaa</windows.upgrade.uuid>\n        <!-- This is used to set many user-visible fields in the Windows Installer. See win-jpackage.txt -->\n        <windows.vendor>Sample</windows.vendor>\n    </properties>\n\n    <dependencies>\n        <!-- This dependency is a normal Maven dependency, here mainly as an example. It brings in other transitive\n         dependencies as well. You can remove it from your project (unless you happen to need to generate test data.  -->\n        <dependency>\n            <groupId>com.github.javafaker</groupId>\n            <artifactId>javafaker</artifactId>\n            <version>1.0.2</version>\n        </dependency>\n        <dependency>\n            <groupId>commons-io</groupId>\n            <artifactId>commons-io</artifactId>\n            <version>2.4</version>\n        </dependency>\n        <!-- Javafx -->\n        <!-- This downloads the platform specific JavaFX libraries used by the project. -->\n        <!-- For the final installable, the JavaFX dependencies are provided via modules, but by including these here\n         they work nicely with with IDEs and other Maven plugins (e.g. the javafx:run). -->\n        <dependency>\n            <groupId>org.openjfx</groupId>\n            <artifactId>javafx-controls</artifactId>\n            <version>${javafx.version}</version>\n            <classifier>${platform}</classifier>\n        </dependency>\n        <dependency>\n            <groupId>org.openjfx</groupId>\n            <artifactId>javafx-graphics</artifactId>\n            <version>${javafx.version}</version>\n            <classifier>${platform}</classifier>\n        </dependency>\n        <dependency>\n            <groupId>org.openjfx</groupId>\n            <artifactId>javafx-fxml</artifactId>\n            <version>${javafx.version}</version>\n            <classifier>${platform}</classifier>\n        </dependency>\n        <!-- excel java -->\n        <dependency>\n            <groupId>org.apache.poi</groupId>\n            <artifactId>poi-ooxml</artifactId>\n            <version>4.1.0</version>\n        </dependency>\n        <!-- Rcaller -->\n        <dependency>\n            <groupId>com.github.jbytecode</groupId>\n            <artifactId>RCaller</artifactId>\n            <version>4.0.2</version>\n            <classifier>jar-with-dependencies</classifier>\n        </dependency>\n         <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>RELEASE</version>\n            <scope>compile</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <extensions>\n            <!-- Used to inject the OS and architecture values in a consistent manner -->\n            <!-- https://github.com/trustin/os-maven-plugin -->\n            <extension>\n                <groupId>kr.motd.maven</groupId>\n                <artifactId>os-maven-plugin</artifactId>\n                <version>1.7.0</version>\n            </extension>\n        </extensions>\n        <resources>\n            <resource>\n                <!-- Here we are processing the platform-specific jpackage command files, adding in Maven\n                 properties for configuration. -->\n                <directory>${project.basedir}/src/packaging</directory>\n                <filtering>true</filtering>\n                <targetPath>${project.build.directory}/packaging</targetPath>\n            </resource>\n            <!-- Add the default resource path back in - by overriding above it disables the default -->\n            <resource>\n                <directory>${project.basedir}/src/main/resources</directory>\n            </resource>\n        </resources>\n\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-install-plugin</artifactId>\n                <configuration>\n                    <!-- This is an app, so we don't want to install it in the local Maven repository -->\n                    <skip>true</skip>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-dependency-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <!-- This copies all of the jar files declared by the Maven build into a single directory.\n                        This makes it easy to assemble the final installer package -->\n                        <id>copy-dependencies</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>copy-dependencies</goal>\n                        </goals>\n                        <configuration>\n                            <!-- The JavaFX libraries are bundled into the custom JVM, so we don't want to duplicate\n                            them in the bundled app and installer. This command skips all of the JavaFX by groupId. -->\n                            <excludeGroupIds>org.openjfx</excludeGroupIds>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <!-- Put the application jar generated by the project into the dependency folder - the default folder\n                for the maven-dependency-plugin output. -->\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <configuration>\n                    <outputDirectory>${project.build.directory}/dependency</outputDirectory>\n                </configuration>\n            </plugin>\n            <plugin>\n                <!-- Plugin to make working with JavaFX nicer. See https://github.com/openjfx/javafx-maven-plugin -->\n                <groupId>org.openjfx</groupId>\n                <artifactId>javafx-maven-plugin</artifactId>\n                <version>0.0.8</version>\n                <configuration>\n                    <mainClass>${main-class}</mainClass>\n                </configuration>\n            </plugin>\n            <plugin>\n                <!-- https://github.com/wiverson/jtoolprovider-plugin -->\n                <groupId>io.github.wiverson</groupId>\n                <artifactId>jtoolprovider-plugin</artifactId>\n                <version>1.0.34</version>\n                <executions>\n                    <!-- This command runs jlink, generating a custom JVM by combining the JavaFX modules bundled in\n                    this project with the JDK modules. -->\n                    <execution>\n                        <id>jlink</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>java-tool</goal>\n                        </goals>\n                        <configuration>\n                            <toolName>jlink</toolName>\n                            <removeDirectories>${project.build.directory}/jvm-image/</removeDirectories>\n                            <modulePath>${project.basedir}/${platform}-javafx/javafx-jmods-${javafx.version}/\n                            </modulePath>\n                            <addModules>${jvm.modules}</addModules>\n                            <output>${project.build.directory}/jvm-image</output>\n                            <args>\n                                <arg>--strip-native-commands</arg>\n                                <arg>--no-header-files</arg>\n                                <arg>--strip-debug</arg>\n                                <arg>--no-man-pages</arg>\n                                <arg>--compress=2</arg>\n                            </args>\n                        </configuration>\n                    </execution>\n                    <!-- The command that actually generates the installer. The options for each platform\n                    are found the /src/packaging directory. These files are copied into the target directory by\n                    the Maven resources plugin, which does the filtering to replace the original values with\n                    the actual Maven properties.\n\n                    https://github.com/wiverson/jtoolprovider-plugin/blob/main/java-tool-doc.md\n                    -->\n                    <execution>\n                        <id>jpackage</id>\n                        <phase>install</phase>\n                        <goals>\n                            <goal>java-tool</goal>\n                        </goals>\n                        <configuration>\n                            <toolName>jpackage</toolName>\n                            <writeOutputToLog>true</writeOutputToLog>\n                            <writeErrorsToLog>true</writeErrorsToLog>\n                            <failOnError>true</failOnError>\n                            <removeDirectories>${project.build.directory}/installer-work</removeDirectories>\n                            <args>@${project.build.directory}/packaging/${platform}-jpackage.txt</args>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <source>${maven.compiler.source}</source>\n                    <target>${maven.compiler.target}</target>\n                </configuration>\n            </plugin>\n        </plugins>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>3.1.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-dependency-plugin</artifactId>\n                    <version>3.2.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>3.0.0-M1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.2.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-project-info-reports-plugin</artifactId>\n                    <version>3.1.2</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>3.2.0</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>3.9.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>3.0.0-M5</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n    </build>\n    <reporting>\n        <plugins>\n            <!-- http://mojo.codehaus.org/versions-maven-plugin/version-rules.html -->\n            <!-- This plugin is a utility to find outdated dependencies in your project. Just run mvn site and\n            the resulting HTML reports in target/site will let you know what plugins and dependencies are out of date.\n             -->\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>versions-maven-plugin</artifactId>\n                <version>2.8.1</version>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>dependency-updates-report</report>\n                            <report>plugin-updates-report</report>\n                            <report>property-updates-report</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n                <configuration>\n                    <processDependencyManagementTransitive>false</processDependencyManagementTransitive>\n                </configuration>\n            </plugin>\n        </plugins>\n    </reporting>\n    <profiles>\n        <!-- We use the built-in Maven profile activation system to set the platform property.\n        These properties are then use to build the directory paths to the platform specific resources.\n        It would be great if Maven automatically added the os family as a property by default\n         -->\n        <profile>\n            <id>unix-active</id>\n            <activation>\n                <os>\n                    <family>unix</family>\n                </os>\n            </activation>\n            <properties>\n                <platform>linux</platform>\n            </properties>\n        </profile>\n        <profile>\n            <id>windows-active</id>\n            <activation>\n                <os>\n                    <family>windows</family>\n                </os>\n            </activation>\n            <properties>\n                <platform>win</platform>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <!-- This adds a \"launch on finish\" to the Windows msi installer. This just tweaks the Windows\n                         installer package to run the executable after the installer runs, simplifying the user experience.\n                          If you don't want this behavior, just delete this plug execution. -->\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>exec-maven-plugin</artifactId>\n                        <version>3.0.0</version>\n                        <executions>\n                            <execution>\n                                <phase>install</phase>\n                                <id>add-launch-to-msi</id>\n                                <goals>\n                                    <goal>exec</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <executable>cscript</executable>\n                            <outputFile>${project.build.directory}/msi-result.log</outputFile>\n                            <workingDirectory>${project.build.directory}</workingDirectory>\n                            <arguments>\n                                <argument>${project.build.directory}/packaging/add-launch-to-msi.js</argument>\n                            </arguments>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>mac-active</id>\n            <activation>\n                <os>\n                    <family>mac</family>\n                </os>\n            </activation>\n            <properties>\n                <platform>mac</platform>\n            </properties>\n        </profile>\n    </profiles>\n</project>\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision e4ad7e4806828b62057d326c28f298f83442cdc5)
+++ b/pom.xml	(date 1658395759968)
@@ -37,7 +37,7 @@
         <maven.compiler.target>17</maven.compiler.target>
 
         <!-- Used to set both the path to find the JavaFX modules and also the versions for Maven dependencies -->
-        <javafx.version>16</javafx.version>
+        <javafx.version>18</javafx.version>
         
         <!-- Replace this UUID with a custom one for your project. This ID is used by the Windows installer system
         to know that an installer is intended to replace/upgrade an earlier version. The easiest thing to do is
