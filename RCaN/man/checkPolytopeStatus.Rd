% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkPolytopeStatus.R
\name{checkPolytopeStatus}
\alias{checkPolytopeStatus}
\title{checkPolytopeStatus
check if the polytope has solution or not}
\usage{
checkPolytopeStatus(x)
}
\arguments{
\item{x}{either a CaNmod oject or a named list with at least a matrix A and
a vector b (A.x<=b) and optionnally a matrix C and a vector v (C.x=v)}
}
\value{
print a message to tell if the polygon is ok or not
}
\description{
checkPolytopeStatus
check if the polytope has solution or not
}
\examples{
n <- 20
A1 <- -diag(n)
b1 <- as.matrix(rep(0,n))
A2 <- diag(n)
b2 <- as.matrix(rep(1,n))
A <- rbind(A1,A2)
b <- rbind(b1,b2)
X0 <- checkPolytopeStatus(list(A = A, b = b)

#this one is empty
C <- matrix(c(1,rep(0,n-1)),1)
v <- 3
X0 <- checkPolytopeStatus(list(A=A,b=b,C=C,v,v)

#exemple with a CaNmod object
myCaNmod <- buildCaN(system.file("extdata", "CaN_template_mini.xlsx",
 package = "RCaN"))
checkPolytopeStatus(myCaNmod)

#we artificially add incompatible constraints (negative flow)
myCaNmod$A <- rbind(myCaNmod$A,c(1,rep(0,ncol(myCaNmod$A)-1)))
rownames(myCaNmod$A)[nrow(myCaNmod$A)]<-"neg_flow"
myCaNmod$b <- c(myCaNmod$b,-1)
checkPolytopeStatus(myCaNmod)

}
