% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cpgsEquality}
\alias{cpgsEquality}
\title{Complex Polytope Gibbs Sampling
This function draw uniform samples in a convex polytope with both equality and inequality constraints}
\usage{
cpgsEquality(N, A, b, C, v, x0, thin = 1L, test = FALSE)
}
\arguments{
\item{N}{the number of samples to generate}

\item{A}{a matrix of coefficients of inequality constants A.x<=b}

\item{b}{a vector of length equals to nrow(A)}

\item{C}{a matrix of coefficients of inequality constants C.x=v}

\item{v}{a vector of length equals to nrow(C)}

\item{x0}{a vector of length equals to ncol(A) that should be in the polytope, for example returned by \code{\link{chebycenter}}}

\item{thin}{the thinning interval}

\item{test}{if true, tryes a method to decrease autocorrelation}
}
\value{
a matrix with one row per sample and one column per parameter
}
\description{
Complex Polytope Gibbs Sampling
This function draw uniform samples in a convex polytope with both equality and inequality constraints
}
\section{Details}{

This function is based on an initial matlab code developped called CPRND
(https://ch.mathworks.com/matlabcentral/fileexchange/34208-uniform-distribution-over-a-convex-polytope)
It generates samples within the complex polytope defined by \eqn{A \cdot x \leqslant   b}
}

\examples{
n <- 20
A1 <- -diag(n)
b1 <- as.matrix(rep(0,n))
A2 <- diag(n)
b2 <- as.matrix(rep(1,n))
A <- rbind(A1,A2)
b <- rbind(b1,b2)
C <- rbind(c(1,1,rep(0,n-2)),c(0,0,1,1,rep(0,n-4)))
v <- matrix(rep(0.2,2),2)
X0 <- rep(0.1,n)
x <- cpgsEquality(1000,A,b,C,v,X0)
}
