% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findingIncompatibleConstr.R
\name{findingIncompatibleConstr}
\alias{findingIncompatibleConstr}
\title{findingIncompatibleConstr
help to dectect constraints that leads to an empty polytope defined
by+A.x<=b and C.x=v or by the polytope of the CaNmod object}
\usage{
findingIncompatibleConstr(x)
}
\arguments{
\item{x}{either a CaNmod oject or a named list with at least a matrix A and
a vector b (A.x<=b) and optionnally a matrix C and a vector v (C.x=v)}
}
\value{
a list of vector. To be fitted, constraints corresponding to the
first elements of each vector of the list should be relaxed.
Those constraints appear to be incompatible with following constraints in the
 Vector. For example, list(c(A,B),c(D,E, F)) means that A and B should be
 relaxed and that
A is incompatible with B and that D is incompatible with both E and F
}
\description{
findingIncompatibleConstr
help to dectect constraints that leads to an empty polytope defined
by+A.x<=b and C.x=v or by the polytope of the CaNmod object
}
\examples{
n <- 20
A1 <- -diag(n)
b1 <- as.matrix(rep(0,n))
A2 <- diag(n)
b2 <- as.matrix(rep(1,n))
A <- rbind(A1,A2)
b <- rbind(b1,b2)
C <- matrix(c(1,rep(0,n-1)),1)
v <- 3
X0 <- findingIncompatibleConstr(list(A = A, b = b, C = C, v = v))

}
