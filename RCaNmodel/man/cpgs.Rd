% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{cpgs}
\alias{cpgs}
\title{Complex Polytope Gibbs Sampling
This function draw uniform samples in a convex polytope with inequality constraints}
\usage{
cpgs(
  N,
  A,
  b,
  x0,
  thin = 1L,
  method = 1L,
  seed = 1L,
  stream = 1L,
  covMat = NULL,
  savedN_total = NULL,
  savedp_shift = NULL
)
}
\arguments{
\item{N}{the number of samples to generate}

\item{A}{a matrix}

\item{b}{a vector of length equals to nrow(A)}

\item{x0}{a vector of length equals to nrcol(A) that should be in the polytope, for example returned by \code{\link{chebyCentre}}}

\item{thin}{thinning interval}

\item{method}{(1 gibbs, 2 hit-and-run, 3 chrr)}

\item{seed}{seed of the dqrng generator}

\item{stream}{stream of the dqrng generator}

\item{covMat}{prespecified covmatrix (avoid initialisation and discard) if
prespecified (default null)}
}
\value{
a matrix with one row per sample and one column per parameter
}
\description{
Complex Polytope Gibbs Sampling
This function draw uniform samples in a convex polytope with inequality constraints
}
\section{Details}{

This function is based on an initial matlab code developped called CPRND
(https://ch.mathworks.com/matlabcentral/fileexchange/34208-uniform-distribution-over-a-convex-polytope)
It generates samples within the complex polytope defined by \eqn{A \cdot x \leqslant   b}
The CHRR algorithm is a C++ translation of cobratoolbox code written
by Yin Zhang licensed under GNU GPL-3 https://github.com/opencobra/cobratoolbox/ 
and of matlab code written by Ben Cousins 
(https://github.com/Bounciness/Volume-and-Sampling) is a C++ translation of
matlab functions provided in the opencobra toolbox and 
in this github repository
}

\examples{
n <- 20
A1 <- -diag(n)
b1 <- as.matrix(rep(0,n))
A2 <- diag(n)
b2 <- as.matrix(rep(1,n))
A <- rbind(A1,A2)
b <- rbind(b1,b2)
X0 <- chebyCentre(A,b)
x <- cpgs(1000,A,b,X0)
}
