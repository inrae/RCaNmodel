% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{gmscale}
\alias{gmscale}
\title{gmscale
scaling of matrix with a geometric mean procedure
MatrixXd A, VectorXd &cscale, VectorXd &rscale, double scltol}
\usage{
gmscale(A, cscale, rscale, scltol)
}
\arguments{
\item{A}{a matrix of coefficients of inequality constants A.x<=b}

\item{cscale}{the column scaling vector}

\item{rscale}{the row scaling vector}

\item{scltol}{tolerance}

\item{b}{a vector of length equals to nrow(A)}
}
\description{
gmscale
scaling of matrix with a geometric mean procedure
MatrixXd A, VectorXd &cscale, VectorXd &rscale, double scltol
}
\section{Details}{

The CHRR algorithm is a C++ translation of cobratoolbox code written
by Yin Zhang licensed under GNU GPL-3 https://github.com/opencobra/cobratoolbox/ 
and of matlab code written by Ben Cousins 
(https://github.com/Bounciness/Volume-and-Sampling) is a C++ translation of
matlab functions provided in the opencobra toolbox and 
in this github repository % `m x n` sparse matrix `A`.

An iterative procedure based on geometric means is used,
following a routine written by Robert Fourer, 1979.
Several passes are made through the columns and rows of `A`.
The main steps are:

  1. Compute :math:`aratio = max_j (max_i Aij / min_i Aij)`.
  2. Divide each row `i` by :math:`sqrt( max_j Aij * min_j Aij)`.
  3. Divide each column `j` by :math:`sqrt( max_i Aij * min_i Aij)`.
  4. Compute `sratio` as in Step 1.
  5. If :math:`sratio < aratio * scltol`,
     set :math:`aratio = sratio` and repeat from Step 2.

To dampen the effect of very small elements, on each pass,
a new row or column scale will not be smaller than sqrt(damp)
times the largest (scaled) element in that row or column.

Use of the scales:
To apply the scales to a linear program,
:math:`min c^T x` st :math:`A x = b`, :math:`l \leq x \leq u`,
we need to define "barred" quantities by the following relations:
`A = R Abar C`, `b = R bbar`, `C cbar = c`,
`C l = lbar`, `C u = ubar`, `C x = xbar`.

This gives the scaled problem
:math:`min\ cbar^T xbar` st :math:`Abar\ xbar = bbar`, :math:`lbar \leq xbar \leq ubar`.

.. Author: - Michael Saunders, Systems Optimization Laboratory, Stanford University.
..
   07 Jun 1996: First f77 version, based on MINOS 5.5 routine m2scal.
   24 Apr 1998: Added final pass to make column norms = 1.
   18 Nov 1999: Fixed up documentation.
   26 Mar 2006: (Leo Tenenblat) First Matlab version based on Fortran version.
   21 Mar 2008: (MAS) Inner loops j = 1:n optimized.
   09 Apr 2008: (MAS) All loops replaced by sparse-matrix operations.
                We can't find the biggest and smallest Aij
                on each scaling pass, so no longer print them.
   24 Apr 2008: (MAS, Kaustuv) Allow for empty rows and columns.
   13 Nov 2009: gmscal.m renamed gmscale.m.
}

